<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>meandering journey</title><link href="http://meandering.journey.sk/" rel="alternate"></link><link href="http://meandering.journey.sk/feeds/all-en.atom.xml" rel="self"></link><id>http://meandering.journey.sk/</id><updated>2013-08-24T06:30:00+02:00</updated><entry><title>October 2013</title><link href="http://meandering.journey.sk/october-2013.html" rel="alternate"></link><updated>2013-08-24T06:30:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-08-24:october-2013.html</id><summary type="html">&lt;p&gt;30 June 2013 marked the conclusion of a successful co-operation between myself and an important client. My involvement in the project had lasted almost 6 years and I felt it was time to move on. Having handed over my responsibilities, I'm enjoying a three-month hiatus and plan to start another engagement in October.&lt;/p&gt;
&lt;h4&gt;What's on offer&lt;/h4&gt;
&lt;p&gt;As it says in the sidebar, I'm mostly a Java guy with 15 years of experience. The details are in my CV (&lt;a href="http://meandering.journey.sk/static/snippets/jan_hustak_cv_201307.doc"&gt;doc&lt;/a&gt; or &lt;a href="http://meandering.journey.sk/static/snippets/jan_hustak_cv_201307.odt"&gt;odt&lt;/a&gt;) but I don't think a CV can convey what really matters.&lt;/p&gt;
&lt;p&gt;I believe I have good analytical and problem-solving skills. I appreciate the complexities of requirement gathering and  the value of customer feedback. I always consider the usability impacts of my design decisions. I understand that IT is not a cure-all and that true solutions to many problems are actually non-technical.&lt;/p&gt;
&lt;p&gt;I'm keenly aware of the &lt;a href="http://blogs.uw.edu/ajko/2012/08/22/john-carmack-discusses-the-art-and-science-of-software-engineering/"&gt;social nature&lt;/a&gt; and the inherent &lt;a href="http://nathanmarz.com/blog/principles-of-software-engineering-part-1.html"&gt;uncertainties&lt;/a&gt; of software development. I crave good &lt;a href="http://www.joelonsoftware.com/articles/Craftsmanship.html"&gt;craftsmanship&lt;/a&gt; and wish there were more of it in our industry. I recognize the importance of great tools and take time to learn them properly. I'm always willing to reconsider my opinions but I'm also capable of defending them - always in a friendly and civil manner.&lt;/p&gt;
&lt;h4&gt;What I'm looking for&lt;/h4&gt;
&lt;p&gt;I hope to join a team of developers who care about the quality of their output. I like a developer culture with emphasis on knowledge sharing, learning and improvement. That implies open and constructive communication. Agile practices are a plus as long as they're implemented consequently.&lt;/p&gt;
&lt;p&gt;I'd love to work on stuff that matters. I'm especially interested in renewable energy, smart grid and energy efficiency, but also medical software, education or any other world-changing area I haven't thought of. Having said that, any software is worth working on as long as it improves the lives of its users or their customers.&lt;/p&gt;
&lt;p&gt;I'm largely geographically constrained to Europe (ideally somewhere around Vienna) but a really great offer might tempt me overseas. I'm keen to try teleworking - huge open-source projects come from dispersed teams so it's got to be feasible. Hybrid models are also an option (3 weeks at home, 1 week on-site etc.).&lt;/p&gt;
&lt;h4&gt;If you're interested&lt;/h4&gt;
&lt;p&gt;Do write me a quick note - &lt;em&gt;coding 'at' journey 'dot' sk&lt;/em&gt;.&lt;/p&gt;</summary><category term="motivation"></category></entry><entry><title>The Levenshtein rules</title><link href="http://meandering.journey.sk/the-levenshtein-rules.html" rel="alternate"></link><updated>2013-07-28T06:30:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-07-28:the-levenshtein-rules.html</id><summary type="html">&lt;p&gt;I continued my exploration of the &lt;a href="http://meandering.journey.sk/the-levenshtein-puzzle.html"&gt;Levenshtein distance&lt;/a&gt; by writing an implementation in the &lt;a href="http://docs.jboss.org/drools/release/6.0.0.Beta5/drools-expert-docs/html/ch04.html#d0e4036"&gt;Drools Rule Language&lt;/a&gt; a.k.a. DRL. It turned out to be very interesting because the properties of DRL forced me to formulate the problem in a completely different way.&lt;/p&gt;
&lt;p&gt;This isn't the right place to delve into rule engines but I'll try to explain the basics. A DRL program is executed in a &lt;em&gt;working memory&lt;/em&gt; containing &lt;em&gt;facts&lt;/em&gt; and &lt;em&gt;rules&lt;/em&gt;. A rule is a simple statement of the form&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;when&lt;/span&gt;
    &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;working&lt;/span&gt; &lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;perform&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;potentially&lt;/span&gt; &lt;span class="n"&gt;affecting&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;working&lt;/span&gt; &lt;span class="n"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;em&gt;when&lt;/em&gt; part contains a fact pattern. When a fact is inserted into the working memory all rules whose &lt;em&gt;when&lt;/em&gt; parts match the new fact get their &lt;em&gt;then&lt;/em&gt; parts executed. This may cause other facts to appear in the working memory, triggering a cascade of rule firing. Well-written rules adhere to two important principles:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;em&gt;then&lt;/em&gt; part should contain no conditional logic (as Drools creator Mark Proctor says, it should be &lt;em&gt;"if this then that"&lt;/em&gt;, not &lt;em&gt;"if this then maybe that"&lt;/em&gt;). All decision-making should be expressed in the &lt;em&gt;when&lt;/em&gt; sections.&lt;/li&gt;
&lt;li&gt;The rules should have the same semantics regardless of their execution order (e.g. when a new fact matches two rules it shouldn't matter which fires first).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As you can see, a rule author gives up a lot of control over the program flow. The idea is to specify &lt;em&gt;what&lt;/em&gt; should happen and let the rule engine figure out &lt;em&gt;how&lt;/em&gt; to do it. The way it looks in practice is that you decompose your input into very small parts that are straightforward to reason about. From that you can formulate rules that let the engine construct the desired result.&lt;/p&gt;
&lt;p&gt;My original Levenshtein distance algorithm used the concepts of identical and orthogonal sub-words. Those are not really suitable for a rule engine because their discovery is in itself quite complex. I replaced them with the idea of character locations. A character location is a simple object that says "there is an 'a' at offset 2 in the word 'banana'". Converting a word into character locations is trivial and I can then throw them into the working memory as new facts (the examples use pseudo-code rather than actual DRL syntax):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;when&lt;/span&gt;
    &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;
    &lt;span class="n"&gt;insert&lt;/span&gt; &lt;span class="n"&gt;CharacterLocation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The rule will be triggered for each of the words as they are inserted into the working memory. Armed with a bunch of CharacterLocations, I can identify character matches:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;when&lt;/span&gt;
    &lt;span class="n"&gt;location1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location2&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CharacterLocation&lt;/span&gt;
    &lt;span class="n"&gt;location1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;character&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;location2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;character&lt;/span&gt;
    &lt;span class="n"&gt;location1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;location2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;insert&lt;/span&gt; &lt;span class="n"&gt;Match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This rule, in turn, will be triggered for each suitable pair of CharacterLocations, generating all possible Matches:&lt;/p&gt;
&lt;p&gt;&lt;img alt="invalid match set" src="http://meandering.journey.sk/static/images/levenshtein2_all.svg" /&gt;&lt;/p&gt;
&lt;p&gt;For the Levenshtein distance I need a combination of Matches that covers as much of the two words as possible. Not every combination makes sense:&lt;/p&gt;
&lt;p&gt;&lt;img alt="invalid match set" src="http://meandering.journey.sk/static/images/levenshtein2_invalid.svg" /&gt;&lt;/p&gt;
&lt;p&gt;so I'm actually looking for &lt;em&gt;sequences&lt;/em&gt; of &lt;em&gt;strictly ordered&lt;/em&gt; Matches, such as this one:&lt;/p&gt;
&lt;p&gt;&lt;img alt="valid match set" src="http://meandering.journey.sk/static/images/levenshtein2_valid.svg" /&gt;&lt;/p&gt;
&lt;p&gt;Generating valid sequences takes a bit of induction. I first create "seeds" - sequences containing just two Matches:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;when&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Match&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt; &lt;span class="n"&gt;Sequence&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;insert&lt;/span&gt; &lt;span class="n"&gt;Sequence&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I proceed to grow each Sequence from the middle, using the &lt;code&gt;visited&lt;/code&gt; set to avoid creating the same one twice:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;when&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;candidate&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Match&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Sequence&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;candidate&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;candidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;candidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;insert&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;visited&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;candidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;candidate&lt;/span&gt; &lt;span class="n"&gt;between&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The distance corresponding to a Sequence is determined by the gaps it leaves open:&lt;/p&gt;
&lt;p&gt;&lt;img alt="sequence with gaps" src="http://meandering.journey.sk/static/images/levenshtein2_gaps.svg" /&gt;&lt;/p&gt;
&lt;p&gt;so once all valid Sequences have been generated, I simply pick the best one:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;when&lt;/span&gt;
    &lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;Sequence&lt;/span&gt; &lt;span class="n"&gt;instances&lt;/span&gt;
&lt;span class="n"&gt;then&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Found distance %s&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And that's it. From a complexity point of view, the algorithm is quite a pig. It explores the entire solution space and doesn't even use the best-known result for pruning. It isn't even easily parallelizable, with all the each-on-each semantics going on. It does, however, stick to the rule-based declarative approach so performance is the rule engine's problem ;-)&lt;/p&gt;</summary><category term="algorithms"></category></entry><entry><title>The Levenshtein puzzle</title><link href="http://meandering.journey.sk/the-levenshtein-puzzle.html" rel="alternate"></link><updated>2013-06-09T04:30:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-06-09:the-levenshtein-puzzle.html</id><summary type="html">&lt;p&gt;I've read a few blog posts recently that mentioned the concept of Levenshtein distance. It's a measure of the difference between two strings &lt;a href="http://en.wikipedia.org/wiki/Levenshtein_distance"&gt;defined as&lt;/a&gt; &lt;em&gt;"the minimum number of single-character edits (insertion, deletion, substitution) required to change one word into the other"&lt;/em&gt;. The definition is very straightforward but when I thought about calculating it I saw no immediately obvious way. Rather than looking it up, I decided to discover an algorithm on my own, with nothing but the definition to start from.&lt;/p&gt;
&lt;p&gt;After a period of requisite head-scratching and ad-hoc attempts I identified two trivial corner cases: identical words (&lt;em&gt;d=0&lt;/em&gt;) and words with no letters in common (&lt;em&gt;d=max(first.length, second.length)&lt;/em&gt;, let's call them &lt;em&gt;orthogonal&lt;/em&gt;). Then came the crucial realization: any pair of words can be chopped up into a sequence of identical and orthogonal sub-words:&lt;/p&gt;
&lt;p style="font-family: monospace"&gt;
d&lt;span style="color: #e08020"&gt;ar&lt;/span&gt;t&lt;span style="color: red"&gt;e&lt;/span&gt;d&lt;br/&gt;
st&lt;span style="color: #e08020"&gt;ar&lt;/span&gt;&lt;span style="color: red"&gt;e&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;The total distance is then the sum of the distances of the orthogonal parts. Note that an orthogonal pair may consist of one empty and one non-empty string as well, such as "t" vs. "" in the example above.&lt;/p&gt;
&lt;p&gt;Trouble is, there may be more than one way to slice the words:&lt;/p&gt;
&lt;p style="font-family: monospace"&gt;
b&lt;span style="color: #e08020"&gt;a&lt;/span&gt;r&lt;span style="color: red"&gt;b&lt;/span&gt;a&lt;span style="color: #6060e0"&gt;ra&lt;/span&gt;&lt;br/&gt;
&lt;span style="color: #e08020"&gt;a&lt;/span&gt;&lt;span style="color: red"&gt;b&lt;/span&gt;&lt;span style="color: #6060e0"&gt;ra&lt;/span&gt;cadabra
&lt;/p&gt;

&lt;p style="font-family: monospace"&gt;
&lt;span style="color: #e08020"&gt;b&lt;/span&gt;&lt;span style="color: red"&gt;a&lt;/span&gt;&lt;span style="color: #6060e0"&gt;r&lt;/span&gt;bara&lt;br/&gt;
a&lt;span style="color: #e08020"&gt;b&lt;/span&gt;r&lt;span style="color: red"&gt;a&lt;/span&gt;cadab&lt;span style="color: #6060e0"&gt;r&lt;/span&gt;a
&lt;/p&gt;

&lt;p style="font-family: monospace"&gt;
b&lt;span style="color: #e08020"&gt;a&lt;/span&gt;&lt;span style="color: red"&gt;r&lt;/span&gt;&lt;span style="color: #6060e0"&gt;b&lt;/span&gt;a&lt;span style="color: #a06060"&gt;ra&lt;/span&gt;&lt;br/&gt;
&lt;span style="color: #e08020"&gt;a&lt;/span&gt;b&lt;span style="color: red"&gt;r&lt;/span&gt;acada&lt;span style="color: #6060e0"&gt;b&lt;/span&gt;&lt;span style="color: #a06060"&gt;ra&lt;/span&gt;
&lt;/p&gt;

&lt;p&gt;and so on. The distances corresponding to these splits are 10, 11 and 8, respectively. The actual minimal distance is 6; discovering the correct split (or splits) is left as an exercise for the reader. The way my algorithm goes about it is a straightforward exhaustive trawling of the solution space. In pseudo-Python:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
     &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
     &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;letter&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
       &lt;span class="n"&gt;subLeft&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="n"&gt;subRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
       &lt;span class="n"&gt;beforeMatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;identical&lt;/span&gt; &lt;span class="n"&gt;prefix&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;subLeft&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;subRight&lt;/span&gt;
       &lt;span class="n"&gt;afterMatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subLeft&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;subRight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
       &lt;span class="n"&gt;newDistance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;beforeMatch&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;afterMatch&lt;/span&gt;
       &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newDistance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see, it's a recursive function not amenable to tail-call optimization so it's prone to overflowing the stack, among other things. There's a ton of potential for performance improvement. One thing I actually have in my implementation is that when beforeMatch &amp;gt;= result I don't go into recursion as it can't possibly produce a lower newDistance. This mini-optimization is omitted from the pseudo-code for clarity.&lt;/p&gt;
&lt;p&gt;Other than that, proper ordering seems to be the key. The algorithm is asymmetric in that it "starts from" the left word and tries to "reach" the right one. Should it always start from the shorter word or from the longer one? Or from the word with fewer unique letters or more unique letters? Should the letters with most locations in the starting word be tried first? Or the ones closest to its beginning?&lt;/p&gt;
&lt;p&gt;A proper complexity analysis (or a robust set of test pairs with known Levenshtein distances) would answer those questions, increasing the likelihood of encountering good matches early, cutting off bigger branches of the search tree. Alas, I have no time for such work, no matter how much fun it would be and how much I'd learn from it. I've solved the puzzle itself and the optimization paths are all well trodden by more capable explorers, I'm sure. Also, given that my solution completely ignores the distribution of letters in the "target" word, there's bound to be a fundamentally better, more symmetric approach. I'm looking forward to reading up on it :-)&lt;/p&gt;
&lt;p&gt;My original implementation is in JavaScript with a &lt;a href="http://meandering.journey.sk/static/snippets/levenshtein.html"&gt;web page&lt;/a&gt; for easy testing of correctness. I later re-wrote it as command-line scripts in &lt;a href="http://meandering.journey.sk/static/snippets/levenshtein.js"&gt;node.js&lt;/a&gt;, &lt;a href="http://meandering.journey.sk/static/snippets/levenshtein.py"&gt;Python&lt;/a&gt; and &lt;a href="http://meandering.journey.sk/static/snippets/levenshtein.go"&gt;Go&lt;/a&gt; in order to compare performance. Surprisingly, Go seems to be only about 33 % faster than both node.js and Python. Mind you, I don't know any of those languages intimately enough to be sure I didn't screw something up performance-wise so the comparison is very rough and not serious in any way. Tasting the different langages' flavors was great fun, though, and I'm itching for C and Drools implementations if I find the time. A functional variant in Scala or Clojure would also be nice but swapping between the imperative and functional mind-sets is &lt;em&gt;really&lt;/em&gt; time-consuming.&lt;/p&gt;</summary><category term="algorithms"></category></entry><entry><title>Software as knowledge repository</title><link href="http://meandering.journey.sk/software-as-knowledge-repository.html" rel="alternate"></link><updated>2013-05-27T16:30:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-05-27:software-as-knowledge-repository.html</id><summary type="html">&lt;p&gt;&lt;em&gt;&lt;strong&gt;Summary&lt;/strong&gt; Software is the most relevant representation of knowledge about a business. It is crucial that this knowledge be accessible to decision-makers. When managers resent refactoring as "not adding business value", they overlook the value of software as a knowledge repository.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Software is the most relevant representation of knowledge about a business. Although it only implements automated workflows, those form an ever-growing part of business activities. Source code is the only 100% accurate and up-to-date documentation of such workflows and often reveals a lot about manual processes as well.&lt;/p&gt;
&lt;p&gt;More importantly, software is &lt;em&gt;executable&lt;/em&gt; knowledge. It doesn't simply describe automated processes - software &lt;em&gt;becomes&lt;/em&gt; the process once running in a production environment.&lt;/p&gt;
&lt;h4&gt;The problem of access&lt;/h4&gt;
&lt;p&gt;It follows that a decision-maker trying to truly master the processes in a business needs fast, flexible and efficient access to software-bound knowledge. What's more, she needs &lt;em&gt;read-write&lt;/em&gt; access in order to augment, extend and deepen the knowledge. It's a non-trivial requirement:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In software, business-specific knowledge is intertwined with lots of other concerns (infrastructure, ergonomics, security, governance, ...).&lt;/li&gt;
&lt;li&gt;Source code addresses several audiences at once (end user, other programmers, compiler).&lt;/li&gt;
&lt;li&gt;Software tends to be heterogeneous even in modestly-sized businesses (different authors, different programming languages and platforms, ...).&lt;/li&gt;
&lt;li&gt;Software has to be precise enough for a computer to execute (i.e. extremely precise by human measure).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The way software is usually managed presents additional difficulties. Business knowledge gets "baked in" at various stages of a complicated dance involving decision-makers, analysts, architects, programmers, testers - oh, and hopefully also end users. The transformation progresses via specification documents, UML diagrams, Scrum stories, bug reports or what have you. Given sufficient skill and will on all sides, there is reasonable certainty that the software does what decision-makers intend it to do. The process is neither flexible, fast nor efficient, however. Improving this situation surely means competitive advantage.&lt;/p&gt;
&lt;h4&gt;Distilling knowledge&lt;/h4&gt;
&lt;p&gt;Many approaches have been tried to bring stakeholders closer to software (and many more will be tried as software grows more important). They often start by isolating business-specific parts of a program (a.k.a. "business logic") from the rest. The idea is sensible enough yet fraught with pitfalls:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The boundary between generic and business-specific code is often blurred.&lt;/li&gt;
&lt;li&gt;Business-specific algorithms can exist at many levels of abstraction.&lt;/li&gt;
&lt;li&gt;Local peculiarities creep into unforeseen places (masked as validation criteria etc.).&lt;/li&gt;
&lt;li&gt;Isolating parameters is much easier than isolating an algorithm.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last point is especially relevant. Many businesses end up with an agreed set of easy-to-tweak configuration settings, complemented by a change-request process that supposedly balances flexibility with maintainability. Such a set-up makes it all too easy to make the wrong trade-offs under schedule pressure. Another possible outcome is programming by configuration, i.e. spiking a program with so many parameters as to make both the code and the configuration extremely complex (this is the shadowy domain of SAP consultants).&lt;/p&gt;
&lt;h4&gt;Matters of presentation&lt;/h4&gt;
&lt;p&gt;When it comes to giving decision-makers useful access, extracting algorithms as well as parameters is clearly essential but won't suffice unless the CEO is fluent in the language in which the code is written. Making business logic palatable to non-technical folks is therefore a major area of activity featuring its own array of methods and tools, with &lt;a href="http://en.wikipedia.org/wiki/Business_process_management"&gt;Business Process Management&lt;/a&gt; (BPM) apparently in vogue these days, complemented by &lt;a href="http://www.brcommunity.com/"&gt;Business Rule Mangement&lt;/a&gt; (BRM).&lt;/p&gt;
&lt;p&gt;Such tools are definitely useful but they only go part of the way. Even with declarative approaches such as BRM, understanding software requires algorithmic thinking. It's a hurdle no programming language nor diagramming technique will overcome. Algorithmic thinking is a skill and can be learned, however. The recent debate regarding &lt;a href="http://www.digitaltrends.com/computing/why-learning-to-code-is-not-just-a-horrible-trend/"&gt;whether everyone should learn to code&lt;/a&gt; is, at its core, about letting people comprehend the world around them as software pervades it. The concern is especially relevant for business decision-makers.&lt;/p&gt;
&lt;p&gt;It will take a generation shift (maybe several) for algorithmic thinking to become common among non-programmers. Mediation between decision-makers and software is therefore poised to remain a feature of the business world for the foreseeable future. As mentioned, the process tends to be rather chaotic in practice and varies immensely between businesses. What's universal is the ever-stronger imperative to make it fast, flexible and efficient.&lt;/p&gt;
&lt;h4&gt;Perils of mediation&lt;/h4&gt;
&lt;p&gt;This is where agile methodologies enter the picture. &lt;a href="http://agilemanifesto.org/"&gt;The Agile Manifesto&lt;/a&gt; reads like a sigh of frustration with the communication barriers between programmers and other stakeholders. Yet it tackles precisely the interface between decision-makers and the software they pay for - which, as is hopefully clear by now, is a really tough nut to crack.&lt;/p&gt;
&lt;p&gt;Agile has endured some &lt;a href="http://www.ambysoft.com/certification/scam.html"&gt;backlash&lt;/a&gt; over the years but it represents great progress nevertheless. It clarifies that there are aspects to developing software that don't have technical solutions. That's always been obvious to managers but putting it in words programmers can understand was certainly commendable. Overall, agile practices do result in &lt;a href="http://www.ibm.com/developerworks/rational/agile/agile-survey/"&gt;improvements&lt;/a&gt; when applied properly.&lt;/p&gt;
&lt;p&gt;The most common cause of failure in agile projects seems to be misunderstanding and mistrust of the &lt;a href="http://agilemanifesto.org/principles.html"&gt;agile principles&lt;/a&gt; on the part of key stakeholders. The principles are thus not applied consistently and the project ends up a half-hearted faux-agile mess.&lt;/p&gt;
&lt;p&gt;Two agile values are particularly difficult yet vital from the perspective of software as knowledge repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Working software&lt;/strong&gt; tends to be misunderstood by non-programmers - they don't appreciate how fragile working software is and how easy it is to introduce bugs. Hence the ignorance of test coverage and the general disregard for software quality in the presence of other priorities.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Responding to change&lt;/strong&gt; tends to be misinterpreted by programmers and non-programmers alike as giving in to schedule pressure. Requirement analysis becomes sloppy, necessary maintenance is skipped.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both pitfalls lead to low-quality code that makes business-specific knowledge catastrophically opaque. The problem can arise surprisingly quickly and the consequences are serious. Requirements are not met, changes take lots of time and introduce bizarre bugs, developers quitting cause undue disruption - a typical project in disarray.&lt;/p&gt;
&lt;h4&gt;Refactoring to the rescue&lt;/h4&gt;
&lt;p&gt;The agile practice of &lt;a href="http://refactoring.com/"&gt;refactoring&lt;/a&gt; aims to achieve high software quality without slowing down the pace of development, even increasing it. Briefly, refactoring means changing software in small incremental steps and confirming the changes through automated test runs (the test runs ensure the behavior of the software stays the same as its structure improves).&lt;/p&gt;
&lt;p&gt;Refactoring is intended to be used early and often, preventing the build-up of hard-to-understand code. The proposition is counter-intuitive because it sounds like extra work. As a result, many teams never adopt the practice. It's a shame: refactoring does speed up coding by slashing the cognitive load imposed on the programmer. In other words, there are far fewer things to worry about when modifications are modest and unit tests are robust.&lt;/p&gt;
&lt;h4&gt;Why no-one does it&lt;/h4&gt;
&lt;p&gt;What happens in practice is that software quality is left to atrophy until a developer comes to a decision-maker and says "Hey, we &lt;em&gt;really&lt;/em&gt; need to refactor this." Time is alotted but it's not enough so big chunks of the code are cleaned up haphazardly with no test coverage. A flurry of new bugs appears and refactoring gets another blemish on its reputation even though it was never brought to bear. Overcoming this anti-pattern requires adaptation on both sides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Software developers must get serious practical exposure to true refactoring as part of their training. The impact has to be experienced to be appreciated.&lt;/li&gt;
&lt;li&gt;Decision-makers must admit to themselves how critical sotware is to their organization and stop treating it as a "cost center" or an obstacle to achieving business objectives.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Why you should do it&lt;/h4&gt;
&lt;p&gt;A well-maintained body of code is valuable whether or not it's directly readable by non-technical decision-makers. Knowledge is at hand, answers are quick, changes are smooth. The company becomes nimble in a way it never could without automation. At a software startup, this notion forms the core of its competitive strategy - that's why working at a startup is so alluring to programmers. It also drives startups' disruptive potential. Decision-makers at conventional companies face the tough task of integrating the value of software into their cultures even if they don't compete with startups. &lt;a href="http://www.businessspectator.com.au/article/2012/12/18/technology/app-assault-taxi-monopoly"&gt;Once they do&lt;/a&gt; it may be too late.&lt;/p&gt;</summary><category term="craftsmanship"></category></entry><entry><title>Reputation as a measure of success</title><link href="http://meandering.journey.sk/reputation-as-a-measure-of-success.html" rel="alternate"></link><updated>2013-05-15T06:31:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-05-15:reputation-as-a-measure-of-success.html</id><summary type="html">&lt;p&gt;I prefer definitions of success that don't involve exclusivity. The problem with exclusivity is that it doesn't scale. When success is defined as being "the best in the world", for example, the number of successful people is limited by the number of categories in which one can be "the best in the world". Many companies thus present themselves as "the global leader" in whatever absurd bombastic-sounding niche they dream up for themselves. In addition, exclusivity is ethically questionable - in the words of &lt;a href="http://www.youtube.com/watch?v=Xt_YhSxjshY"&gt;Scatman John&lt;/a&gt;, &lt;em&gt;"how can someone win when winning means that someone loses?"&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I believe everyone deserves the confidence and satisfaction that comes with success. Definitions that don't require excluding anyone are preferable from this point of view. For a business, "being profitable" may be one such definition of success. "Growing consistently" may be another one, although growth does become exclusive once a market matures.&lt;/p&gt;
&lt;p&gt;The other extreme - feel-good notions of "success" that don't require any effort - is even more problematic. Slight positive bias in one's self image is said to help achieve goals but the goals have to be there in the first place. (Interesting aside: does presence of goals indicate absence of success? Is success a state or a process? Why do we want to succeed, anyway?)&lt;/p&gt;
&lt;p&gt;I became aware of these issues quite early in my youth and decided my definition of career success would be &lt;em&gt;"achieving respect in a community of competent professionals"&lt;/em&gt;. This was before the Internet. I can now say I've been achieving this success through most of my career if the "community" is defined as one's workplace and its circle of competent professionals.&lt;/p&gt;
&lt;p&gt;That's no longer enough. For years, I have been standing on the sidelines of the great community that is the Internet. I would love to achieve a measure of respect there but it's quite scary. As the Red Woman says, &lt;a href="http://www.youtube.com/watch?v=_YmVI84iYOQ"&gt;the Net is vast and full of strangers&lt;/a&gt;, many of them jerks or worse. Even the sub-Internet of "competent software development professionals" is vast and full of strangers, many of them jerks or worse.&lt;/p&gt;
&lt;p&gt;This brings up an awkward fact: when a community becomes large enough, respect of peers becomes exclusive. Respecting someone requires being aware of their existence, achievements and other attributes. Awareness is a limited resource. In my team at work there are so few of us we can comfortably judge each other's competence and award respect to everyone who deserves it. On the internet, however, I compete for the respect of my peers just as they compete for mine.&lt;/p&gt;
&lt;p&gt;What to do about this? It's obvious that my youthful definition of success was flawed as it didn't correspond to my own ethics. I need to formulate another definition fully immune from exclusion. Perhaps something like "creating works of high quality useful to customers and delightful to users", as mundane as that sounds. (Of course, the previous definition did mention "works of high quality" between the lines: it spoke of "competent professionals" rather than "gullible fools".)&lt;/p&gt;
&lt;p&gt;Having said that, my craving for "respect" doesn't feel like a symptom of vanity. I'd say it reflects a pretty basic human need for acceptance within the group I identify with. When such acceptance is a scarcity I can either give up on being accepted, pursue the acceptance to the exclusion of others or choose a different, smaller community to participate in. I don't feel like giving up but both of the other options involve, well, talking to strangers. Oh my...&lt;/p&gt;</summary><category term="craftsmanship"></category><category term="motivation"></category></entry><entry><title>The psychology of casual street cleaning</title><link href="http://meandering.journey.sk/the-psychology-of-casual-street-cleaning.html" rel="alternate"></link><updated>2013-05-11T00:21:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-05-11:the-psychology-of-casual-street-cleaning.html</id><summary type="html">&lt;p&gt;&lt;em&gt;&lt;strong&gt;Summary&lt;/strong&gt; Picking up other people's trash is an empowering gesture that turns you from a whiner into a fixer.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I've developed a peculiar habit. Sometimes when I'm approaching our apartment block I scan the ground for small pieces of trash. If I spot one not too far from my trajectory I pick it up and put it where it belongs - in a nearby dumpster. This behavior is much less common than you might think. It's also surprisingly rewarding.&lt;/p&gt;
&lt;p&gt;Street litter has always been a common problem here in Bratislava and it used to upset me. That's the prevailing attitude in this city. People don't like dirty streets and will tell you so when asked. Few, however, do anything about it. There are several psychological barriers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is widely acknowledged that someone else should do the cleaning. Some - one might call them "conservatives" - would tell you it's up to those who did the littering. Others - "socialists" perhaps - would maintain it's the city administration's responsibility. Both notions are rather naive. The underlying attitude is that it's simply not fair that we, upstanding citizens who never litter the streets, should clean up after those who do.&lt;/li&gt;
&lt;li&gt;When most people think of street cleaning they imagine removing &lt;em&gt;all&lt;/em&gt; the litter from a substantial area. That's obviously a lot of work which needs many people if it's to be finished reasonably soon. Coordination is required and before you know it there's a project to manage.&lt;/li&gt;
&lt;li&gt;Another mental block stems from the sheer futility of the effort. When a street does get cleaned up by municipal workers or by "spring cleaning" volunteers it doesn't take long for new litter to bloom. And it doesn't take a lot of litter to make a street look messy.&lt;/li&gt;
&lt;li&gt;There is the simple unpleasantness of trash itself. Picking up someone else's cigarette butt and carrying it to a trash can means overcoming a hint of revulsion. It's ironic: the very feeling that motivates street cleaning also makes it difficult.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coping with these inhibitions is all about awareness. Street litter presents no immediate threat nor opportunity so it's blocked out by the subconscious most of the time, along with many other details of the urban exterior. The blocking takes work, however. Garbage is visually loud - it mostly consists of discarded packaging designed to stand out on store shelves. Navigating dirty streets thus incurs a subliminal mental cost we're mostly unaware of. Once we recognize the full magnitude of the cost we become more willing to deal with the problem.&lt;/p&gt;
&lt;p&gt;Another thing to realize is that removing even a single piece of trash reduces the mental cost in a tangible way. The street may be quite as dirty as before but the piece we picked up must have caught our attention which means it was somehow "more important" than the rest of the environment, amplifying the cost reduction. The immediacy of the reduction gives it even more impact (the reptilian brain is a sucker for immediate rewards).&lt;/p&gt;
&lt;p&gt;From a more long-term perspective, the effort to remove one piece of trash is a one-time investment which pays off every time we visit the affected place. This is a delayed reward further compromised by new garbage appearing all the time, so it's not very significant. What's more important is that if we experience the immediate reward often enough a habit starts to form, lowering the mental cost of the act itself and making the reward even more attractive. A virtuous cycle forms.&lt;/p&gt;
&lt;p&gt;All of this speculation may sound rather abstract but the psychological benefit I've experienced is real and substantial. When I notice a piece of litter these days it doesn't bother me anymore. I either pick it up and dispose of it properly or concede to myself that it's too far off my path. There's a sober honesty and clarity about it which does feel liberating. At the same time, I get regular experiences of doing noticeable good with modest effort.&lt;/p&gt;
&lt;p&gt;In conclusion, I can recommend casual street cleaning as a worthwhile activity (given proper sanitary precautions, of course). Next time you find yourself angry at the unknown hooligans, why not try undoing their carelessness? You will help yourself more than anyone else.&lt;/p&gt;</summary><category term="motivation"></category></entry><entry><title>The minimal patch fallacy</title><link href="http://meandering.journey.sk/the-minimal-patch-fallacy.html" rel="alternate"></link><updated>2013-04-25T21:10:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-04-25:the-minimal-patch-fallacy.html</id><summary type="html">&lt;p&gt;One of the goals of refactoring is to improve the readability of code. I have noticed, however, that I sometimes forsake a refactoring in order to preserve the readability of the resulting changeset. It tends to happen when I'm making a sensitive change in a complicated spot - the point is to make future "detective work" easier. I have evolved this approach after delving into Mercurial history way too many times while trying to understand opaque code.&lt;/p&gt;
&lt;p&gt;At first blush, it seems there is a genuine trade-off at play. A refactoring - by definition - introduces changes that don't impact the observable behavior of a program. Mixing such modifications into a bug-fixing or feature-implementing changeset necessarily obscures its purpose. Clarity of the code is at odds with the clarity of its history.&lt;/p&gt;
&lt;p&gt;Closer inspection reveals that the trade-off is pure nonsense. &lt;em&gt;Code&lt;/em&gt; gets executed - not history. The present code must hence be readable on its own, in its present context. The very need to consult version control only arises when there are code smells all over the place. The urge to keep history clean is thus nothing more than a symptom of fear - fear of disrupting the fragile mess the code has become. &lt;em&gt;The same fear refactoring works to obliterate.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Having said that, isolating refactorings in their own changesets is certainly a good idea - it makes the history clearer with no negative impact on the code. It may not be always possible, though (the need for a clean-up often arises in the middle of other work).&lt;/p&gt;
&lt;p&gt;I fell prey to the minimal patch fallacy while working on an allegedly agile project. Despite the efforts of all involved there came a point when deadlines defeated test coverage, technical debt payments were postponed and all that remained were stand-ups. I started leaning on code history not long thereafter. Goes to show that cargo-cult agility ruins not just the code but also programming habits...&lt;/p&gt;</summary><category term="craftsmanship"></category></entry><entry><title>PIMp my calendar: Aftermath</title><link href="http://meandering.journey.sk/pimp-my-calendar-aftermath.html" rel="alternate"></link><updated>2013-04-21T18:55:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-04-21:pimp-my-calendar-aftermath.html</id><summary type="html">&lt;p&gt;I spent some of my free time over the past few weeks trying to get the Calendar app on my Android phone to run with a non-Google and non-MS-Exchange account (see &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-1.html"&gt;part 1&lt;/a&gt;, &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-2.html"&gt;part 2&lt;/a&gt;, &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-3.html"&gt;part 3&lt;/a&gt;, &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-4.html"&gt;part 4&lt;/a&gt; and &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-5.html"&gt;part 5&lt;/a&gt;). As with my &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-aftermath.html"&gt;printer woes&lt;/a&gt;, it turned out to be an enlightening excercise. I ended up running the &lt;a href="http://radicale.org/"&gt;Radicale&lt;/a&gt; CALDav server on my home server and Marten Gajda's &lt;a href="http://dmfs.org/caldav/"&gt;CalDAV adapter&lt;/a&gt; on the little machine. I discovered fun facts about Android and its development tools along the way (the highlight was discovering that changing the minimum API level in Eclipse ADT fails to trigger a re-build).&lt;/p&gt;
&lt;p&gt;As for the lessons learned, I guess there is a balance to be struck when troubleshooting a technical issue. One approach involves poking and prodding the system, observing responses and formulating hypotheses. Another option is to study information &lt;em&gt;about&lt;/em&gt; the system - source code, documentation, online forums and other resources. Combining these modes optimally is rather delicate and I do tend to err on the side of experimentation. The knowledge it yields may be overly specific and not very reusable but the process fosters a problem-solving mind-set that comes in handy in other situations as well. Besides, documentation may be out of date and, &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-4.html"&gt;as we've seen&lt;/a&gt;, even source code may not be quite what it seems. In fact, what hindered me in resolving the calendaring problem was that I failed to recognize the extent of the system I was working with - namely that it included the development environment.&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="Android"></category><category term="CalDAV"></category></entry><entry><title>PIMp my calendar, part 5</title><link href="http://meandering.journey.sk/pimp-my-calendar-part-5.html" rel="alternate"></link><updated>2013-04-21T18:55:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-04-21:pimp-my-calendar-part-5.html</id><summary type="html">&lt;p&gt;The self-hosted calendaring solution I had been &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-4.html"&gt;trying to set up&lt;/a&gt; turned out not to work due to an incompatibility between my Android phone and the CalDAV client I tried to run on it. My options at this point consisted of&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;upgrading the firmware in my phone to Ice Cream Sandwich or higher&lt;/li&gt;
&lt;li&gt;buying a new phone&lt;/li&gt;
&lt;li&gt;porting the CalDAV Adapter to the unofficial and unsupported APIs&lt;/li&gt;
&lt;li&gt;choosing a different calendaring solution&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My handset is a &lt;a href="http://www.google.com/url?q=http://en.wikipedia.org/wiki/GeeksPhone_One"&gt;Geeksphone One&lt;/a&gt; - a sturdy little machine well supported by Cyanogen Mod yet simply too weak to handle anything beyond 2.3.x. It's condemned to stay in the &lt;a href="http://en.wikipedia.org/wiki/File:Android-dist-by-dessert.png"&gt;Gingerbread zombie army&lt;/a&gt; until I retire it. Buying a new phone is plausible in the mid- to long-term but I do want a slide-out QWERTY keyboard. Looks like I'll have to overcome my allergy to &lt;a href="http://www.gsmarena.com/sony_ericsson_xperia_pro-3779.php"&gt;Sony&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I looked into back-porting the &lt;a href="https://github.com/gggard/AndroidCaldavSyncAdapater"&gt;CalDAV adapter&lt;/a&gt; to the unofficial APIs available in Gingerbread. It seemed like a ton of work with dubious benefits - especially when I found out the work had already been done. You see, the adapter I'd been working with (written by Gérald Garcia) was not the only one I'd found - there is also &lt;a href="http://dmfs.org/caldav/"&gt;another adapter&lt;/a&gt; written by Marten Gajda which I hadn't considered since it isn't distributed as open-source. It does work under Gingerbread, however, which made a proper impression on me given everything I knew at this stage.&lt;/p&gt;
&lt;p&gt;I ended up doing something I hadn't done in years - I purchased and installed a piece of closed-source software. One thing that convinced me was Marten's website which is simple and sticks to the point; the same can be said of the software. Unfortunately, even with a bona-fide polished product on the Android side it wasn't smooth sailing. I had a Radicale instance installed on my notebook for debugging and it talked to the adapter just fine - unlike the home server. Both were running Radicale 0.7 by this point so I compared their OS-specific patches (using &lt;em&gt;apt-get src&lt;/em&gt; on my Debian notebook and the ports tree on the OpenBSD home server). One of the Debian patches added automatic creation of calendars which was lacking in the OpenBSD version (this functionality is mentioned in current Radicale documentation but that supposedly refers to 0.7.1; the experiment with &lt;a href="http://www.mozilla.org/projects/calendar/lightning/"&gt;Mozilla Lightning&lt;/a&gt; in &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-3.html"&gt;part 3&lt;/a&gt; had worked because the Debian version was involved). Porting the patch and installing from ports was a matter of minutes. After that, &lt;strong&gt;everything worked like a charm&lt;/strong&gt;.&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="Android"></category><category term="CalDAV"></category></entry><entry><title>PIMp my calendar, part 4</title><link href="http://meandering.journey.sk/pimp-my-calendar-part-4.html" rel="alternate"></link><updated>2013-04-21T06:55:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-04-21:pimp-my-calendar-part-4.html</id><summary type="html">&lt;p&gt;&lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-1.html"&gt;Previous&lt;/a&gt; &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-2.html"&gt;parts&lt;/a&gt; of the &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-3.html"&gt;saga&lt;/a&gt; brought me to a point where I had an upgraded instance of the &lt;a href="http://radicale.org/"&gt;Radicale&lt;/a&gt; CalDAV server talking to my Android phone's &lt;a href="https://github.com/gggard/AndroidCaldavSyncAdapater"&gt;CalDAV adapter&lt;/a&gt; and still getting nowhere. I decided to debug the Android-side code.&lt;/p&gt;
&lt;p&gt;Attaching the debugger was &lt;a href="http://stackoverflow.com/questions/5379129/debugging-not-working-in-a-service-class-what-can-cause-this-issue"&gt;a bit of a trick&lt;/a&gt; since the adapter has no Activity. Once I got past that, I discovered the response from Radicale was getting parsed just fine but it was only happening in an authentication context (i.e. while adding the new "CalDAV account"). I generally found that the adapter was basically a bunch of callbacks and I seemed unable to properly trigger them.&lt;/p&gt;
&lt;p&gt;I then noticed something funny in the log (i.e. the LogCat view in the DDMS perspective in Eclipse):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;VFY: unable to resolve static field 27 (CONTENT_URI) in Landroid/provider/CalendarContract$Events;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to the &lt;a href="http://developer.android.com/guide/topics/providers/calendar-provider.html"&gt;documentation&lt;/a&gt;, &lt;em&gt;Events.CONTENT_URI&lt;/em&gt; is one of the basic constants used when working with calendars - how could it be missing? The question led to a quick series of discoveries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My phone runs Android 2.3.7 a.k.a. Gingerbread (well, not really a discovery for me but a key piece of the puzzle).&lt;/li&gt;
&lt;li&gt;Proper support for non-Google calendars was only added in version 4.0 a.k.a. Ice Cream Sandwich; what there was before was &lt;a href="http://www.techrepublic.com/blog/app-builder/programming-with-the-android-40-calendar-api-the-good-the-bad-and-the-ugly/825"&gt;unofficial and unsupported&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The CalDAV Adapter project lists API level 14 (Ice Cream Sandwich) as the minimum required API level in its Android manifest.&lt;/li&gt;
&lt;li&gt;Back when I first tried to run the CalDAV adapter, Eclipse ADT had told me I had no compatible device; I tried modifying the manifest, changing the minimum API level to 10 (Gingerbread).&lt;/li&gt;
&lt;li&gt;Changing the minimum API level of an Android project &lt;em&gt;doesn't trigger a re-build in Eclipse ADT&lt;/em&gt;; changing the &lt;em&gt;target API level&lt;/em&gt; does trigger a re-build.&lt;/li&gt;
&lt;li&gt;Once prompted to re-build the project, ADT flags usage of higher-than-minimum-level APIs as an error, breaking the build.&lt;/li&gt;
&lt;li&gt;When Dalvik encounters unknown API usage while executing the code, it marks the block where the API was used as &lt;em&gt;dead code&lt;/em&gt; and moves on.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So I was trying to use an application that was incompatible with my handset and both the development environment and the runtime responded with silent failures. I think ADT in particular behaved quite impolitely. If using APIs beyond the minimum level is off-limits then changing the minimum level should trigger a re-build, right? As for the Android runtime, the &lt;a href="http://developer.android.com/guide/topics/manifest/uses-sdk-element.html#min"&gt;documentation&lt;/a&gt; says&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;...the application will crash during runtime when attempting to access the unavailable APIs.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;which seems to be false (or at least no indication of a crash reaches the user). In any case, the approach I'd been taking turned out to be a dead end. &lt;em&gt;Continued in &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-5.html"&gt;part 5&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="Android"></category><category term="CalDAV"></category></entry><entry><title>PIMp my calendar, part 3</title><link href="http://meandering.journey.sk/pimp-my-calendar-part-3.html" rel="alternate"></link><updated>2013-04-17T05:45:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-04-17:pimp-my-calendar-part-3.html</id><summary type="html">&lt;p&gt;My &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-1.html"&gt;efforts&lt;/a&gt; to put a &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-2.html"&gt;server-backed&lt;/a&gt; calendar on my Android phone entered a new phase. I had &lt;a href="http://www.radicale.org/"&gt;Radicale&lt;/a&gt; on the server and the &lt;a href="https://github.com/gggard/AndroidCaldavSyncAdapater"&gt;CalDAV adapater&lt;/a&gt; on the phone but they seemed to talk past each other. My phone would set up a CalDAV account successfully but then tell me "You have no calendar" when I tried to create events.&lt;/p&gt;
&lt;p&gt;Radicale documentation says calendars are created automagically based on a URL convention, i.e. simply accessing a non-existent calendar should bring it into existence. I tried it with the Mozilla Lightning client and it worked as advertised. The Android adapter, however, still wouldn't see the new calendar nor its events.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.wireshark.org"&gt;WireShark&lt;/a&gt; revealed that a CalDAV client apparently enjoys a lot of freedom when formulating requests. A PROPFIND request from Lightning looked like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;D:propfind&lt;/span&gt; &lt;span class="na"&gt;xmlns:D=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DAV:&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:CS=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://calendarserver.org/ns/&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:C=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urn:ietf:params:xml:ns:caldav&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;D:prop&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;D:resourcetype/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;D:owner/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;D:supported-report-set/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;C:supported-calendar-component-set/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;CS:getctag/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/D:prop&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/D:propfind&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;whereas the Android adapter was sending&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;d:propfind&lt;/span&gt; &lt;span class="na"&gt;xmlns:d=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DAV:&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:c=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urn:ietf:params:xml:ns:caldav&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:cs=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://calendarserver.org/ns/&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:ic=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://apple.com/ns/ical/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;d:prop&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;d:displayname&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;d:resourcetype&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;cs:getctag&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/d:prop&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/d:propfind&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and it seemed Radicale was not happy with the &lt;em&gt;displayname&lt;/em&gt; bit:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nx"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;propstat&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;displayname&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;status&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;HTTP&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;1.1&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt; &lt;span class="ow"&gt;Not&lt;/span&gt; &lt;span class="nx"&gt;Found&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nb"&gt;status&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;propstat&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Server-side source code revealed that Radicale returns 404 for properties which it does not recognize (see the final &lt;em&gt;else&lt;/em&gt; in the long &lt;em&gt;if-elif&lt;/em&gt; chain in &lt;em&gt;_propfind_response()&lt;/em&gt; in &lt;em&gt;xmlutils.py&lt;/em&gt;). My installed version of Radicale was 0.7. I downloaded the most recent stable release (0.7.1) from the project site and tried that instead. Lo and behold, it finally said&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;multistatus&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DAV:&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:C=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urn:ietf:params:xml:ns:caldav&amp;quot;&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:CS=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://calendarserver.org/ns/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;response&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;href&amp;gt;&lt;/span&gt;/jh/calendar/&lt;span class="nt"&gt;&amp;lt;/href&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;propstat&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;prop&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;displayname&amp;gt;&lt;/span&gt;calendar&lt;span class="nt"&gt;&amp;lt;/displayname&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;resourcetype&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;C:calendar&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;collection&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/resourcetype&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;CS:getctag&amp;gt;&lt;/span&gt;&amp;quot;0&amp;quot;&lt;span class="nt"&gt;&amp;lt;/CS:getctag&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/prop&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;status&amp;gt;&lt;/span&gt;HTTP/1.1 200 OK&lt;span class="nt"&gt;&amp;lt;/status&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/propstat&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/response&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/multistatus&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The Calendar app on my phone, however, &lt;em&gt;still&lt;/em&gt; insisted I had no calendar. &lt;em&gt;Continued in &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-4.html"&gt;part 4&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="Android"></category><category term="CalDAV"></category></entry><entry><title>PIMp my calendar, part 2</title><link href="http://meandering.journey.sk/pimp-my-calendar-part-2.html" rel="alternate"></link><updated>2013-04-08T04:00:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-04-08:pimp-my-calendar-part-2.html</id><summary type="html">&lt;p&gt;My effort to set up a &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-1.html"&gt;self-hosted calendaring&lt;/a&gt; solution is taking on epic proportions, turning into another &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-aftermath.html"&gt;CUPS saga&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I quickly discarded the &lt;a href="https://play.google.com/store/apps/details?id=org.kc.and.ical"&gt;local iCal option&lt;/a&gt; because I can't trust a piece of closed-source freeware from someone calling themselves "Khaos".&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://code.google.com/p/kolab-android/"&gt;Kolab connector&lt;/a&gt; dropped out of the race because Kolab itself has complex dependencies and no OpenBSD package.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.zafara.com"&gt;Zafara&lt;/a&gt; just felt too heavy-weight and, well, corporate for my needs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I decided to concentrate on CalDAV servers with existing OpenBSD packages: &lt;a href="http://www.davical.org/"&gt;DAVical&lt;/a&gt;, &lt;a href="http://owncloud.org/"&gt;ownCloud&lt;/a&gt;, &lt;a href="http://www.radicale.org/"&gt;Radicale&lt;/a&gt; and &lt;a href="http://code.google.com/p/sabredav/"&gt;SabreDAV&lt;/a&gt;. All except Radicale were PHP-based which made my decision easy as I'm &lt;a href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/"&gt;allergic to PHP&lt;/a&gt;. I have to admit, though, ownCloud looks mighty fine and seems to have a lot of momentum.&lt;/p&gt;
&lt;p&gt;Radicale has a no-nonsense, focused feel. It is written in Python which is very nice indeed. Installing it was a breeze. I then tried to set up a calendar in Kontact and failed miserably. CalDAV support in Akonadi is apparently confined to a legacy KResource implementation and &lt;em&gt;blah blah blah&lt;/em&gt;. I had no stamina to go there. What was important was my phone.&lt;/p&gt;
&lt;p&gt;Installing Gérald Garcia's open-source &lt;a href="https://github.com/gggard/AndroidCaldavSyncAdapater"&gt;AndroidCaldavSyncAdapater&lt;/a&gt; via Google Play would have been a snap. The thing is, just as I don't want Google knowing about my appointments I don't want it knowing what I run on my phone. Don't get me wrong - I'm quite fond of Google. I'm simply more fond of my privacy.&lt;/p&gt;
&lt;p&gt;Installing the adapter from GitHub turned out to be quite smooth. Once I cloned the repository I found out the project relied on the &lt;a href="http://developer.android.com/tools/sdk/eclipse-adt.html"&gt;ADT Eclipse plugin&lt;/a&gt; for building and signing the installation package - no trouble there. I had a bit of fun getting ADT to &lt;a href="http://developer.android.com/tools/device.html"&gt;see my phone&lt;/a&gt; because I made a typo in the &lt;em&gt;udev&lt;/em&gt; rule file. I figured it out eventually and got the package onto the phone.&lt;/p&gt;
&lt;p&gt;Adding a Radicale account on Android involved going to &lt;em&gt;Settings &amp;gt; Accounts &amp;amp; sync &amp;gt; Add account &amp;gt; CalDAV Sync Adapter&lt;/em&gt; and filling out my user name, password and the URL. Excited, I opened the calendar application. No nagging about MS Exchange - great. Alas, when I tried to create an event I was told "You have no calendars." &lt;em&gt;Continued in &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-3.html"&gt;part 3&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="Android"></category><category term="CalDAV"></category></entry><entry><title>PIMp my calendar, part 1</title><link href="http://meandering.journey.sk/pimp-my-calendar-part-1.html" rel="alternate"></link><updated>2013-03-31T12:45:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-03-31:pimp-my-calendar-part-1.html</id><summary type="html">&lt;p&gt;I have a confession to make: I'm a PIM dinosaur. My appointment list resides in an ultra-minimalist GTD app I wrote as an exercise in HTML5 local storage. Even though it runs on my Android phone, it has no alarm function (did I say it was HTML5?). It's just a list of appointments I have to actively look into.&lt;/p&gt;
&lt;p&gt;Of course, the phone has a native calendar app. Back when I had stock firmware it demanded my Google account details before it would talk to me. My appointments are none of Google's business (despite what Google may think) so I stayed away from the app. Now that I run CyanogenMod it asks about my MS Exchange account. Let's just say I don't &lt;em&gt;do&lt;/em&gt; MS Exchange.&lt;/p&gt;
&lt;p&gt;An alarm would be nice, though. Syncing with Kontact on my notebook wouldn't hurt either. Since I'm in the process of building a new home server, I considered fixing my calendar woes as well.&lt;/p&gt;
&lt;p&gt;My research turned up several interesting facts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Android calendar can be backed by anything which says it's a "calendar service".&lt;/li&gt;
&lt;li&gt;The default calendar service on my phone talks ActiveSync - the MS Exchange calendar synchronization protocol.&lt;/li&gt;
&lt;li&gt;Other groupware tools besides MS Exchange talk ActiveSync.&lt;ul&gt;
&lt;li&gt;Zafara with its &lt;a href="http://z-push.sourceforge.net/soswp/"&gt;Z-Push&lt;/a&gt; connector looks the most mature.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Other calendar services for Android exist.&lt;ul&gt;
&lt;li&gt;The &lt;a href="http://code.google.com/p/kolab-android/"&gt;Kolab connector&lt;/a&gt; appeals to me since Kolab is friends with Kontact.&lt;/li&gt;
&lt;li&gt;Another interesting choice is a &lt;a href="https://github.com/gggard/AndroidCaldavSyncAdapater"&gt;CalDAV service&lt;/a&gt; which should talk to any CalDAV server.&lt;ul&gt;
&lt;li&gt;There are &lt;a href="http://caldav.calconnect.org/implementations/servers.html"&gt;a &lt;em&gt;ton&lt;/em&gt; of CalDAV servers&lt;/a&gt; including a CalDAV module for Apache.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There's also a calendar service backed by &lt;a href="https://play.google.com/store/apps/details?id=org.kc.and.ical"&gt;an iCal file&lt;/a&gt; right on the phone.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It seems I first need to decide whether I would actually use the syncing capability of a server or whether it's best to choose the iCal option and forget about a server altogether. &lt;em&gt;Continued in &lt;a href="http://meandering.journey.sk/pimp-my-calendar-part-2.html"&gt;part 2&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="Android"></category><category term="CalDAV"></category></entry><entry><title>The battle of the C5280: Aftermath</title><link href="http://meandering.journey.sk/the-battle-of-the-c5280-aftermath.html" rel="alternate"></link><updated>2013-03-30T20:00:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-03-30:the-battle-of-the-c5280-aftermath.html</id><summary type="html">&lt;p&gt;After a protracted investigation spanning several days (see &lt;a href="http://meandering.journey.sk/alice-in-printerland.html"&gt;part 1&lt;/a&gt;, &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-1.html"&gt;part 2&lt;/a&gt;, &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-2.html"&gt;part 3&lt;/a&gt; and &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-3.html"&gt;part 4&lt;/a&gt;), my new home server is finally providing access to my HP Photosmart C5280 printer-scanner combo. The basic goal has been achieved but I cannot be very happy with the end result. To get the printer to work, I had to disable the &lt;em&gt;ulpt&lt;/em&gt; and &lt;em&gt;umass&lt;/em&gt; USB drivers in the server's OpenBSD 5.2 kernel - they were both being assigned to the device along with the &lt;em&gt;ugen&lt;/em&gt; driver the system actually wanted to talk to.&lt;/p&gt;
&lt;p&gt;Granted, the &lt;em&gt;ulpt&lt;/em&gt; driver is largely superfluous when the printer works with &lt;em&gt;ugen&lt;/em&gt; (though I can imagine having another USB printer to which I'd want to print through a service other than CUPS that would specifically need &lt;em&gt;ulpt&lt;/em&gt;). Disabling &lt;em&gt;umass&lt;/em&gt; is more serious. As it happens, my home server needs no USB storage at the moment but that could change in the future, putting me in a difficult spot. I don't think this is an acceptable state of affairs in the long term, especially when the previous home server running OpenBSD 4.8 exhibits no such limitations.&lt;/p&gt;
&lt;p&gt;Regarding the effort it took me to get to this point, it was largely a function of my insistence on figuring things out on my own. I do enjoy this sort of detective work from time to time and I did learn a bunch of new things so it was definitely time well spent. Truly resolving the issue is beyond my capacity, however. It's a task for OpenBSD hackers who know their way around USB plumbing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt; &lt;em&gt;The issue has been &lt;a href="http://www.openbsd.org/cgi-bin/cvsweb/ports/devel/libusb1/patches/patch-libusb_os_openbsd_usb_c?only_with_tag=OPENBSD_5_3"&gt;fixed&lt;/a&gt; in OpenBSD 5.3 which was released on May 1, 2013.&lt;/em&gt;&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="OpenBSD"></category><category term="CUPS"></category></entry><entry><title>The battle of the C5280, part 4</title><link href="http://meandering.journey.sk/the-battle-of-the-c5280-part-4.html" rel="alternate"></link><updated>2013-03-29T19:45:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-03-29:the-battle-of-the-c5280-part-4.html</id><summary type="html">&lt;p&gt;I have previously recounted how I &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-1.html"&gt;forced libusb&lt;/a&gt; to print trace statements, &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-2.html"&gt;cajoled CUPS&lt;/a&gt; into recognizing my printer and &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-3.html"&gt;mastered gdb&lt;/a&gt; in order to probe in CUPS' bowels.&lt;/p&gt;
&lt;p&gt;Fortunately, no such bowel-probing was needed. As I examined where the &lt;em&gt;NULL&lt;/em&gt; in &lt;em&gt;dpriv-&amp;gt;devname&lt;/em&gt; may have come from, I found out it was only being set in good old &lt;em&gt;obsd_get_device_list&lt;/em&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;dpriv&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;devname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * If a device is attached to ugen(4) it has&lt;/span&gt;
&lt;span class="cm"&gt; * only one &amp;#39;devname&amp;#39;.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;strncmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ugen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;di&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;udi_devnames&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;dpriv&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;devname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="n"&gt;strdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;di&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;udi_devnames&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I duly exercised the spot via my &lt;a href="the-battle-of-the-c5280-part-1.html#test"&gt;toy program&lt;/a&gt; with a breakpoint at the &lt;em&gt;strcmp&lt;/em&gt; line. It turned out that the expectation expressed over there in the comment is, in my case, wrong. At busnode &lt;em&gt;/dev/usb0&lt;/em&gt;, address 3, the value of &lt;em&gt;di.udi_devnames&lt;/em&gt; was ["ulpt0", "umass0", "ugen0"].&lt;/p&gt;
&lt;p&gt;My subsequent search for solutions involved a crash-course in USB driver architecture and lots of source-code browsing. The general aim was to make the resulting &lt;em&gt;libusb_device&lt;/em&gt; palatable to CUPS by setting it up correctly. It was a tall order and I didn't really figure out what the &lt;a href="http://www.openbsd.org/cgi-bin/man.cgi?query=usb&amp;amp;sektion=4"&gt;usb man page&lt;/a&gt; meant when it said&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For each USB device there may be additional drivers attached to it.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;More specifically, I didn't find out whether it was possible to "activate" a different driver than the default one (perhaps by switching the device to another configuration). I suspect it would have taken serious time to finish that investigation but along the way I discovered CUPS' package readme (first as &lt;em&gt;pkg/README&lt;/em&gt; in the port directory, then under &lt;em&gt;/usr/local/share/doc&lt;/em&gt; after installing). It advised removing the &lt;em&gt;ulpt&lt;/em&gt; driver as colliding with &lt;em&gt;ugen&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I tried the suggested remedy (using &lt;em&gt;config -e -o&lt;/em&gt;) and it didn't work - but it wouldn't, would it? The string in &lt;em&gt;di.udi_devnames[0]&lt;/em&gt; still didn't start with "ugen". I obviously had to remove the &lt;em&gt;umass&lt;/em&gt; driver as well. One more reboot and... &lt;strong&gt;the test page materialized&lt;/strong&gt;.&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="OpenBSD"></category><category term="CUPS"></category></entry><entry><title>The battle of the C5280, part 3</title><link href="http://meandering.journey.sk/the-battle-of-the-c5280-part-3.html" rel="alternate"></link><updated>2013-03-29T07:30:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-03-29:the-battle-of-the-c5280-part-3.html</id><summary type="html">&lt;p&gt;In &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-1.html"&gt;part 1&lt;/a&gt; and &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-2.html"&gt;part 2&lt;/a&gt; I describe how I got CUPS to recognize my printer. Alas, the battle was far from over: it still refused to print. Back in &lt;em&gt;/var/log/cups/error_log&lt;/em&gt; I found&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;libusb&lt;/span&gt; &lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;operation&lt;/span&gt; &lt;span class="n"&gt;returned&lt;/span&gt; &lt;span class="n"&gt;fffffff4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course, fffffff4 translates to -12 which translates to &lt;em&gt;LIBUSB_ERROR_NOT_SUPPORTED&lt;/em&gt;. More trace statements were in order.&lt;/p&gt;
&lt;p&gt;From the surrounding log messages I figured out that the error was returned from &lt;em&gt;obsd_submit_transfer&lt;/em&gt; in &lt;em&gt;openbsd_usb.c&lt;/em&gt;. I found all places in that function where the error could have been returned and equipped them with traces. The culprit turned out to be one level deeper, in &lt;em&gt;_sync_gen_transfer&lt;/em&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dpriv&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;devname&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIBUSB_ERROR_NOT_SUPPORTED&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By now my round-trip was quite masochistic:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Edit openbsd_usb.c as patched by the port.&lt;/li&gt;
&lt;li&gt;Make a new patch.&lt;/li&gt;
&lt;li&gt;Replace the port's patch with the new one.&lt;/li&gt;
&lt;li&gt;Rebuild port.&lt;/li&gt;
&lt;li&gt;Stop CUPS.&lt;/li&gt;
&lt;li&gt;Uninstall libusb and CUPS (CUPS depends on libusb).&lt;/li&gt;
&lt;li&gt;Install libusb from the port.&lt;/li&gt;
&lt;li&gt;Install CUPS.&lt;/li&gt;
&lt;li&gt;Start CUPS.&lt;/li&gt;
&lt;li&gt;Try something.&lt;/li&gt;
&lt;li&gt;See what turns up in the log.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I did have a script for steps 2 through 9 but now I needed to find out how &lt;em&gt;NULL&lt;/em&gt; got into &lt;em&gt;dpriv-&amp;gt;devname&lt;/em&gt;. I realized it was time to learn &lt;a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gdb"&gt;gdb&lt;/a&gt; - the GNU interactive debugger.&lt;/p&gt;
&lt;p&gt;If you click on that link you will find a typical OpenBSD man page: clear, succint, to the point (I've said this before: documentation is the most impressive thing about OpenBSD, by far). Figuring out how to compile libusb with debugging symbols was another stumbling block, however. The line &lt;em&gt;.ifdef DEBUG&lt;/em&gt; in the port's &lt;em&gt;Makefile&lt;/em&gt; had given me a mistaken impression that the value of &lt;em&gt;DEBUG&lt;/em&gt; didn't matter. I put &lt;em&gt;DEBUG=1&lt;/em&gt; into &lt;em&gt;/etc/mk.conf&lt;/em&gt; and libusb promptly stopped building, with &lt;em&gt;configure&lt;/em&gt; saying something to the effect that CC was unable to generate an executable. Rummaging throug &lt;em&gt;configure.log&lt;/em&gt;, the incriminating lines looked approximately like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;cc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pipe&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;conftest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="nl"&gt;cc:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Silly me thought the first "1" was a parameter for the "-pipe" option while the other "1" was a line number. Once I put one and one together (ahem), &lt;em&gt;man cc&lt;/em&gt; told me &lt;em&gt;DEBUG&lt;/em&gt; should be &lt;em&gt;-g&lt;/em&gt;, obviously, after which &lt;em&gt;make clean build&lt;/em&gt; produced a file 100K bigger than before, pregnant with debugging wisdom. I was happy.&lt;/p&gt;
&lt;p&gt;Having conquered the last obstacle, I was stepping through my toy program in no time. I even found the multi-window ncurses-based TUI (text user interface) although that wasn't mentioned in the man page. One irritating thing about TUI was that it didn't have the debbuged program's standard streams under control. Each time a trace statement was printed it blew up the layout. I finally turned it off by running gdb with &lt;em&gt;-tty=/dev/null&lt;/em&gt; which wasn't ideal either but it was an improvement. To be frank, I would expect TUI to have a dedicated console window to handle the program's I/O. Alas, that doesn't seem to be the case.&lt;/p&gt;
&lt;p&gt;The source seemed to be somewhat out of sync with the code being executed ("next" kept jumping back and forth, gdb itself would segfault once I launched the program a few times). I ascribed this to optimizations performed by CC so I turned them off by saying &lt;em&gt;CFLAGS=-O0 -g&lt;/em&gt; in the port's &lt;em&gt;Makefile&lt;/em&gt; and rebuilding (the &lt;em&gt;-g&lt;/em&gt; was necessary because apparently &lt;em&gt;CFLAGS&lt;/em&gt; in the &lt;em&gt;Makefile&lt;/em&gt; overrides &lt;em&gt;CFLAGS&lt;/em&gt; assembled by other means). To my surprise, it did help - stepping became perfectly smooth from then on.&lt;/p&gt;
&lt;p&gt;Of course, gdb only took me deeper into the mystery. &lt;em&gt;Continued in &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-4.html"&gt;part 4&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="OpenBSD"></category><category term="CUPS"></category></entry><entry><title>The battle of the C5280, part 2</title><link href="http://meandering.journey.sk/the-battle-of-the-c5280-part-2.html" rel="alternate"></link><updated>2013-03-29T06:30:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-03-29:the-battle-of-the-c5280-part-2.html</id><summary type="html">&lt;p&gt;I ended &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-1.html"&gt;part 1&lt;/a&gt; with a description of my struggles to display trace statements inserted into libusb. One spot where I needed to add a trace was&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;busnode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;O_RDWR&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;ENOENT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;ENXIO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;usbi_err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;could not open %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;busnode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that the code here keeps a rather important detail (errno) to itself. I changed the code to&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;busnode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;O_RDWR&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;ENOENT&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;errno&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;ENXIO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;usbi_err&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;could not open %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;busnode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;errno: %d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and once the output started flowing I found out that errno was 13 (EACCESS). A classic file permissions problem, it's just that it wasn't very well reported. It should have been apparent back when I saw the backend work without problems when run directly.&lt;/p&gt;
&lt;p&gt;Rather than figuring out which user's permissions are in effect when CUPS calls the backend, I simply turned on global read-write permissions for &lt;em&gt;/dev/ugen*&lt;/em&gt; to see if it would help. It didn't.&lt;/p&gt;
&lt;p&gt;After another bit of "fun" detective work, I found the reason buried in the libusb port. For those unfamiliar with OpenBSD ports, a port is basically a recipe for turning an external piece of software into an OpenBSD package. It contains instructions for fetching and unpacking the source, patching it for OpenBSD, building it, packaging the result in a neat &lt;em&gt;.tgz&lt;/em&gt; file and even installing an unistalling it.&lt;/p&gt;
&lt;p&gt;I noticed that the patch for &lt;em&gt;openbsd_usb.c&lt;/em&gt; was rather big - almost 18K. On closer look, it was a substantial rewrite of the whole file which was kind of unexpected since the original code was already supposed to be OpenBSD-specific. One thing the rewrite changed was that it was no longer iterating over &lt;em&gt;/dev/ugen&lt;em&gt;&lt;em&gt; but rather over &lt;/em&gt;/dev/usb&lt;/em&gt;&lt;/em&gt;. I failed to notice it when inserting trace statements - the pattern had been extracted into constants at the start of the file.&lt;/p&gt;
&lt;p&gt;Armed with new wisdom, I turned on global read-write permissions for &lt;em&gt;/dev/usb*&lt;/em&gt;. &lt;strong&gt;Progress! CUPS finally found my printer.&lt;/strong&gt; I clicked on "Print test page". As you may have guessed, nothing happened. &lt;em&gt;Continued in &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-3.html"&gt;part 3&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="OpenBSD"></category><category term="CUPS"></category></entry><entry><title>The battle of the C5280, part 1</title><link href="http://meandering.journey.sk/the-battle-of-the-c5280-part-1.html" rel="alternate"></link><updated>2013-03-28T05:05:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-03-28:the-battle-of-the-c5280-part-1.html</id><summary type="html">&lt;p&gt;The other day I posted a &lt;a href="http://meandering.journey.sk/alice-in-printerland.html"&gt;frustrated rant&lt;/a&gt; about my troubles getting the printer to work under OpenBSD. This has evolved into a massive struggle which is still ongoing. On the one hand, it's ridiculous how much time I'm devoting to this. On the other, I've dusted off my C chops, built basic proficiency with gdb and discovered a bunch of curious facts about OpenBSD and USB which I'll probably never use again and forget in a matter of weeks. So it's perhaps worth writing some of them down.&lt;/p&gt;
&lt;p&gt;First, a bit of background. My home server runs on OpenBSD. One of its duties is providing access to a HP Photosmart C5280 printer via CUPS and it works like a charm. The version of OpenBSD I'm running is getting old, however, so I've purchased the 5.2 CD set and I'm setting it up on another machine.&lt;/p&gt;
&lt;p&gt;Everything went well until I tried to add the printer via CUPS' web interface. No local connection was detected. I turned on extra logging (by saying &lt;em&gt;LogLevel debug&lt;/em&gt; in &lt;em&gt;/etc/cups/cupsd.conf&lt;/em&gt;), clicked around in the web UI and found this in &lt;em&gt;/var/log/cups/error_log&lt;/em&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;libusb_get_device_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It looked like libusb was having trouble finding the printer. I looked up libusb &lt;a href="http://www.libusb.org"&gt;on the web&lt;/a&gt;, looked at the source code and confirmed my suspicion. I also found out there was an OpenBSD-specific file (&lt;a href="http://www.libusb.org/browser/libusb/libusb/os/openbsd_usb.c"&gt;openbsd_usb.c&lt;/a&gt;) which looked for &lt;em&gt;/dev/ugen*&lt;/em&gt; devices. Those were present on my system in abundance, so a missing device wasn't a problem.&lt;/p&gt;
&lt;p&gt;The error log also mentioned &lt;em&gt;/usr/local/libexec/cups/backend/usb&lt;/em&gt; and browsing CUPS help gave me a hint of what &lt;a href="http://www.cups.org/documentation.php/man-backend.html"&gt;backends&lt;/a&gt; were about. So I ran the USB backend directly on the command line. To my surprise, it had no problem finding the device. Something was wrong in the way CUPS was calling the backend.&lt;/p&gt;
&lt;p&gt;&lt;a id="test"&gt;&lt;/a&gt;I decided to &lt;a href="http://www.openbsd.org/faq/faq15.html#Ports"&gt;set up OpenBSD ports&lt;/a&gt; and compile libusb with some trace statements. I wrote a minimal program to test things:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;libusb.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;libusb_device&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;libusb_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;libusb_get_device_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Devices: %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;libusb_free_device_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;libusb_exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I hadn't done C hacking in a while so I spent a fair amount of time just crafting the proper &lt;em&gt;cc&lt;/em&gt; command line but eventually I could read a nice "Devices: 7" in the output. I then started sprinkling trace statements over libusb. I naively thought using &lt;em&gt;fprintf(stderr, ...)&lt;/em&gt; would be easier than figuring out how to activate the existing logging functions (&lt;em&gt;usbi_warn&lt;/em&gt;, &lt;em&gt;usbi_dbg&lt;/em&gt; etc.). No matter what I did, the traces wouldn't show up. Eventually I did activate libusb's logging (commenting out &lt;em&gt;.ifdef DEBUG&lt;/em&gt; in the port's &lt;em&gt;Makefile&lt;/em&gt;). Didn't help.&lt;/p&gt;
&lt;p&gt;After much wailing and gnashing of teeth, it turned out it was a linking problem. I'd trusted &lt;em&gt;cc&lt;/em&gt; would link the library statically by default (I have no idea how to override the default anyway). The bastard used dynamic linking instead which meant that upon running the program I was talking to &lt;em&gt;/usr/local/lib/libusb-1.0.so.1.0&lt;/em&gt; from the installed libusb package. Running with&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;PORT_PATH&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libusb1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0.9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libusb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0.9&lt;/span&gt;
&lt;span class="n"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;PORT_PATH&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libusb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;libs&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;brought a revelation. &lt;em&gt;Continued in &lt;a href="http://meandering.journey.sk/the-battle-of-the-c5280-part-2.html"&gt;part 2&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="OpenBSD"></category><category term="CUPS"></category></entry><entry><title>Alice in Printerland</title><link href="http://meandering.journey.sk/alice-in-printerland.html" rel="alternate"></link><updated>2013-03-24T11:55:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-03-24:alice-in-printerland.html</id><summary type="html">&lt;p&gt;I've just spent about 12 hours trying to set up CUPS on my OpenBSD home server, with no success. The USB backend didn't want to recognize the local printer. After setting up OpenBSD ports, inserting trace statements into libusb sources and forcing ld to talk to the newly compiled library instead of the one from the standard package, I found out that the backend stumbled on "Permission denied". I made the /dev entries global-readable and -writable to see if it would help. The printer was recognized and I could install it properly.&lt;/p&gt;
&lt;p&gt;Then I tried printing a test page and LIBUSB_ERROR_ACCESS became LIBUSB_ERROR_OTHER.&lt;/p&gt;
&lt;p&gt;There are 13 places in libusb where the _OTHER could come from and I have lost the will to see where the rabbit hole leads. Time for a fresh start.&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="OpenBSD"></category><category term="CUPS"></category></entry><entry><title>What I learned about Pelican</title><link href="http://meandering.journey.sk/what-i-learned-about-pelican.html" rel="alternate"></link><updated>2013-02-28T22:05:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-02-28:what-i-learned-about-pelican.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;initialize a site: &lt;strong&gt;pelican-quickstart&lt;/strong&gt; (launches an interactive questionnaire)&lt;/li&gt;
&lt;li&gt;write content: just put .md files in content/&lt;/li&gt;
&lt;li&gt;generate site: &lt;strong&gt;make html&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;autorefresh mode:  &lt;strong&gt;make devserver&lt;/strong&gt; (also hosts the site at &lt;a href="http://localhost:8000/"&gt;localhost:8000&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;further information: &lt;a href="http://docs.getpelican.com/"&gt;docs.getpelican.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="meta"></category><category term="howto"></category></entry><entry><title>Idiosyncrasies in Python's timezone handling</title><link href="http://meandering.journey.sk/idiosyncrasies-in-pythons-timezone-handling.html" rel="alternate"></link><updated>2013-02-23T04:13:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-02-23:idiosyncrasies-in-pythons-timezone-handling.html</id><summary type="html">&lt;p&gt;As I work to fix timezone logic in &lt;a href="https://github.com/codingjourney/upsheet"&gt;upsheet&lt;/a&gt;, I've become somewhat frustrated with date and time handling in Python. Coming from a Java background, I know this stuff is awfully difficult to get right. Python has a large community driven by sophisticated users, however, so I expected things to be pretty smooth. I was wrong:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;datetime&lt;/em&gt; vs. &lt;em&gt;time&lt;/em&gt;&lt;/strong&gt;
Two modules with overlapping functionality and no clear separation of scope.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;datetime.datetime&lt;/em&gt;&lt;/strong&gt;
A class with the same name as its module. This is probably common in the Python library but it makes for weird expressions such as &lt;em&gt;datetime.datetime.strptime(...)&lt;/em&gt;. Kind of nudges you to drop the module prefix with &lt;em&gt;from datetime import *&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timezone handling in &lt;em&gt;datetime&lt;/em&gt; is a red-headed stepchild&lt;/strong&gt;
The &lt;em&gt;datetime&lt;/em&gt; module tactfully avoids the gritty details of coming up with the local system's current timezone. You can supply a timezone but you have to provide your own &lt;em&gt;tzinfo&lt;/em&gt; subclass to do it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timezone handling in &lt;em&gt;time&lt;/em&gt; is a red-headed stepchild&lt;/strong&gt;
You get &lt;em&gt;timezone&lt;/em&gt; for the non-DST system timezone, &lt;em&gt;altzone&lt;/em&gt; for the DST system timezone, &lt;em&gt;daylight&lt;/em&gt; to see if &lt;em&gt;altzone&lt;/em&gt; is even applicable and &lt;em&gt;localtime().tm_isdst&lt;/em&gt; to decide (provided &lt;em&gt;altzone&lt;/em&gt; is applicable) whether &lt;em&gt;timezone&lt;/em&gt; or &lt;em&gt;altzone&lt;/em&gt; is the local system's current timezone. Whew! I mean, it's wonderfully precise and flexible but kind of all over the place.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timezone offsets are represented inconsistently&lt;/strong&gt;
While &lt;em&gt;datetime.tzinfo.utcoffset()&lt;/em&gt; must return its result in minutes, both &lt;em&gt;time.timezone&lt;/em&gt; and &lt;em&gt;time.altzone&lt;/em&gt; provide the offset in seconds. Trivial yet irritating.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;datetime.time&lt;/em&gt; vs. &lt;em&gt;time&lt;/em&gt;&lt;/strong&gt;
A class in one module with the same name as a related module. When you use &lt;em&gt;datetime&lt;/em&gt; without the module prefix, this forces you to either also use &lt;em&gt;time&lt;/em&gt; without the prefix - further polluting the naming scope - or alias it using &lt;em&gt;import time as sillytime&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;inconsistent timezone offsets&lt;/strong&gt;
While &lt;em&gt;time.timezone&lt;/em&gt; and &lt;em&gt;time.altzone&lt;/em&gt; specify timezone offsets in seconds west of UTC, &lt;em&gt;tzinfo.utcoffset()&lt;/em&gt; must return minutes east of UTC.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mischievous documentation&lt;/strong&gt;
One example: the description of &lt;em&gt;struct_time.tm_isdst&lt;/em&gt; says &lt;em&gt;"0, 1 or -1; see below"&lt;/em&gt;. Of course, there's no further mention of &lt;em&gt;tm_isdst&lt;/em&gt; anywhere in the document. A sentence buried in the next paragraph does say &lt;em&gt;"A -1 argument as the daylight savings flag, passed to mktime() will usually result in the correct daylight savings state to be filled in."&lt;/em&gt;. Which means the -1 is utterly irrelevant except for one specific use-case.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Having figured all of this out, I can now construct a &lt;em&gt;datetime.datetime&lt;/em&gt; instance equipped with the correct &lt;em&gt;tzinfo&lt;/em&gt; for the current local timezone. This goes to show how hard it is to design a really good API.&lt;/p&gt;
&lt;p&gt;I do hope it all works the same way under Windows...&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="Python"></category><category term="upsheet"></category></entry><entry><title>Stuck in a timezone</title><link href="http://meandering.journey.sk/stuck-in-a-timezone.html" rel="alternate"></link><updated>2013-02-22T07:16:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-02-22:stuck-in-a-timezone.html</id><summary type="html">&lt;p&gt;My &lt;a href="https://github.com/codingjourney/upsheet"&gt;timesheet uploader&lt;/a&gt; micro-project started off as a spontaneous scratch-your-own-itch effort with very little polish. No error handling, liberal copy-paste, vague structure - you know the story. The code obviously involved some parsing and formatting of dates and times. It wasn't very complicated so I avoided the &lt;a href="http://docs.python.org/2.7/library/datetime.html"&gt;big&lt;/a&gt; &lt;a href="http://docs.python.org/2.7/library/time.html"&gt;guns&lt;/a&gt;, sticking to string manipulation and simple arithmetic (figuring out that &lt;em&gt;0830-1030&lt;/em&gt; means 120 minutes etc.).&lt;/p&gt;
&lt;p&gt;Timesheet entries are fed to JIRA as JSON documents via its REST API. JSON doesn't define a standard timestamp format but examples in the &lt;a href="http://docs.atlassian.com/jira/REST/latest/#id225379"&gt;documentation&lt;/a&gt; use ISO8601 with a timezone suffix - something like &lt;em&gt;2012-08-14T08:30:00.000+0200&lt;/em&gt;. I dutifully slapped on the suffix as a constant to all my outgoing timestamp data.&lt;/p&gt;
&lt;p&gt;One of the things I wanted from the script was to detect timesheet entries that were already in JIRA to prevent duplication in the worklogs. This involved downloading the worklog for the relevant issue and comparing it with the entry that was to be uploaded. When parsing timestamps in the worklog I happily ignored the timezone suffix. I figured I would always be in the same timezone as my JIRA server.&lt;/p&gt;
&lt;p&gt;After some time I noticed this collision detection was often failing. I had no time to analyze it so I simply took care to upload my timesheet all at once and re-upload only the failed entries if there were errors. It was a pain but still much better than stuffing JIRA manually.&lt;/p&gt;
&lt;p&gt;When I got more free time in January I discovered the true nature of the bug. Both me and my JIRA server had effectively switched timezones when the Daylight Savings Time ended in October. The script, however, still had &lt;em&gt;+0200&lt;/em&gt; in its outgoing timestamps. This meant that I uploaded an entry with &lt;em&gt;08:30:00.000+0200&lt;/em&gt; but then it came back as &lt;em&gt;09:30:00.000+0100&lt;/em&gt;. Ignoring the timezone, the script detected no overlap (as long as duration was under 61 minutes) and proceeded to re-upload the entry, again with &lt;em&gt;08:30:00.000+0200&lt;/em&gt; in the timestamp.&lt;/p&gt;
&lt;p&gt;It turns out that no, I can't ignore timezones in my calculations after all. Besides, the code is already &lt;a href="https://github.com/codingjourney/upsheet"&gt;on GitHub&lt;/a&gt; and right now collision detection works only for the lucky users who are two hours East from UTC together with their JIRA servers. Good thing I haven't told anyone yet :-)&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="upsheet"></category></entry><entry><title>The Heroku mess</title><link href="http://meandering.journey.sk/the-heroku-mess.html" rel="alternate"></link><updated>2013-02-16T07:35:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2013-02-16:the-heroku-mess.html</id><summary type="html">&lt;p&gt;On February 12, 2013, a startup called RapGenius accused the &lt;a href="http://www.heroku.com"&gt;Heroku cloud host&lt;/a&gt; of knowingly stifling the performance of the RapGenius Rails app, causing the need for extra instances and subsequent higher service charges.&lt;/p&gt;
&lt;p&gt;RapGenius' &lt;a href="http://rapgenius.com/James-somers-herokus-ugly-secret-lyrics"&gt;blog post&lt;/a&gt; is impressive in that it describes the issues clearly yet provides sufficient details. It is really worth a read which is why I'm not going to reproduce nor summarize it here.&lt;/p&gt;
&lt;p&gt;I believe none of the parties involved (Heroku, RapGenius and the monitoring outfit New Relic) come out looking good:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Heroku&lt;/strong&gt; failed to announce a substantial platform change to customers.&lt;/em&gt; The company provides Platform as a Service (several platforms, actually). A platform is a system of components working together to provide essential services for applications. Heroku switched their Rails platform from an optimal combination of components (single-request dynos, intelligent routing) to a substantially sub-optimal one (single-request dynos, random routing). They failed to notify customers of the switch in advance. They either failed to measure the performance impact of the switch or purposefully withheld knowledge of the impact from their customers. They failed to reflect the switch in their documentation.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;New Relic&lt;/strong&gt; simply failed to account for all latencies in their monitoring.&lt;/em&gt; It appears they measured many internal values within the platform but failed to cross-check them against a black-box view from the outside. It seems quite unprofessional, especially given the pricing of their service.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;RapGenius&lt;/strong&gt; put too much trust in an external entity.&lt;/em&gt; Instead of an independent monitoring service they used one sold as an add-on to their platform by the platform provider. They took more than two years to detect a major performance degradation in their platform (in fairness, the problem only becomes apparent when the number of dynos reaches a certain threshold).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What's truly puzzling is that none of Heroku's other Rails customers seems to have encountered this issue before RapGenius. One possibility is that RapGenius is the first Heroku Rails app to achieve sufficient scale for the problem to occur. Another is that some customers did indeed catch the problem right at the start, adapted to the new configuration and simply never thought to give a heads-up to the rest of the community.&lt;/p&gt;
&lt;p&gt;The morale of the story for me is that it's foolish to use a monitoring service with business ties to the entity being monitored (or, indeed, to outsource monitoring in the first place - it's a critical QA function, after all). An independent monitoring service must still be given enough access to the monitored system to provide necessary detail. This is not trivial as monitoring can interfere with the monitored system. Some form of meta-monitoring is perhaps needed. Ah, the ever-fascinating world of IT :-)&lt;/p&gt;</summary><category term="cloud computing"></category></entry><entry><title>Catching a boot-time kernel oops call trace</title><link href="http://meandering.journey.sk/catching-a-boot-time-kernel-oops-call-trace.html" rel="alternate"></link><updated>2011-09-13T00:27:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2011-09-13:catching-a-boot-time-kernel-oops-call-trace.html</id><summary type="html">&lt;p&gt;Another issue my HTPC exhibited recently was a tendency to crash early in the boot process. It became apparent it was suffering from an &lt;a href="https://lkml.org/lkml/2011/7/11/434"&gt;initialization issue&lt;/a&gt; in the &lt;a href="http://wilsonet.com/?page_id=99"&gt;iMon&lt;/a&gt; driver. I couldn't confirm it, though, since the call trace was too long to fit on the screen and it didn't turn up in any of the files under /var/log.&lt;/p&gt;
&lt;p&gt;I studied various options for capturing the call trace, including &lt;a href="http://www.cyberciti.biz/tips/linux-netconsole-log-management-tutorial.html"&gt;netconsole&lt;/a&gt; and &lt;a href="http://mjg59.livejournal.com/137710.html"&gt;pstore&lt;/a&gt; but since I had access to an RS-232 cable with switched RX/TX pins (a.k.a. "null-modem cable"?) I ended up choosing the good old serial console. This involved connecting the HTPC to my notebook with the serial cable, starting &lt;a href="http://cutecom.sourceforge.net/"&gt;cutecom&lt;/a&gt; on the notebook and doing the following on the HTPC:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sysconfig&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grub&lt;/span&gt;
&lt;span class="cp"&gt;# GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;console=ttyS0,19200n8 console=tty0&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;grub&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course, "19200n8" must match the parameters set in cutecom on the other side of the link. With this setup, it only took a few reboots to reproduce the crash, capture the call trace and confirm the iMon driver as the culprit. Fortunately, a patch for the problem &lt;a href="https://lkml.org/lkml/2011/7/18/221"&gt;already existed&lt;/a&gt; so it was only a matter of either waiting until it reached my aptosid kernel or patching the kernel on my own. In the meantime, I'm booting into the previous kernel.&lt;/p&gt;</summary><category term="HTPC"></category><category term="howto"></category></entry><entry><title>Update on Logitech diNovo Edge and iMON PAD</title><link href="http://meandering.journey.sk/update-on-logitech-dinovo-edge-and-imon-pad.html" rel="alternate"></link><updated>2011-08-03T19:50:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2011-08-03:update-on-logitech-dinovo-edge-and-imon-pad.html</id><summary type="html">&lt;p&gt;My HTPC lived a few months without an update to its &lt;a href="http://www.aptosid.com/"&gt;aptosid&lt;/a&gt; installation. When I subsequently did perform an update, I ran into some of the same problems I used to have with my Logitech wireless keyboard and iMON remote control. With the help of my &lt;a href="http://meandering.journey.sk/logitech-dinovo-edge-vs-aptosid.html"&gt;previous&lt;/a&gt; &lt;a href="http://meandering.journey.sk/soundgraph-imon-pad-vs-linux-2636.html"&gt;blog posts&lt;/a&gt;, I was able to set things straight rather quickly.&lt;/p&gt;
&lt;p&gt;The solution to my original keyboard problem had been to replace &lt;em&gt;/usr/sbin/hid2hci&lt;/em&gt; with a dummy version. In the meantime, &lt;em&gt;/usr/sbin/hid2hci&lt;/em&gt; was superseded by &lt;em&gt;/lib/udev/hid2hci&lt;/em&gt;. I simply replaced the new file with a dummy version as well.&lt;/p&gt;
&lt;p&gt;As for the remote control, the current problem resembled a broken "nomouse" mode of the imon kernel module that I had encountered before. The module seemed to be OK this time, however, so I kept looking and eventually the LIRC manual offered a &lt;a href="http://www.lirc.org/html/devinput.html"&gt;great description&lt;/a&gt; of a LIRC-HAL interaction that seemed to match my symptoms. I tried following the advice from the manual but it just didn't work. It turned out the &lt;em&gt;DEVICE&lt;/em&gt; setting in &lt;em&gt;/etc/lirc/hardware.conf&lt;/em&gt; had become obsolete. The correct new setting is&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;DEVICE&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="n"&gt;c2_ffdc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;if00&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the remote works like a charm again (for a while, anyway...)&lt;/p&gt;</summary><category term="IT misadventures"></category></entry><entry><title>Look mom, no ports!</title><link href="http://meandering.journey.sk/look-mom-no-ports.html" rel="alternate"></link><updated>2011-02-13T17:04:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2011-02-13:look-mom-no-ports.html</id><summary type="html">&lt;p&gt;I'm currently updating a commercial HTML-based desktop application that I wrote a few years ago. Customers keep having permissions trouble on Windows with the back-end opening a TCP port for serving front-end's HTTP requests. I decided to try to refresh both the back-end (to Jetty 7.3.0) and the front-end (to WebKit running in Java via Qt Jambi) and run them in one process with no TCP ports involved. Both components have reputations for being easy to embed, so I thought it shouldn't be too hard. Yeah right...&lt;/p&gt;
&lt;p&gt;Actually, things went very smoothly at first. Here's what I discovered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jetty accepts requests via Connectors; one of them is LocalConnector.&lt;/li&gt;
&lt;li&gt;Obviously, setting up Jetty with LocalConnector is beyond the scope of this post :-)&lt;/li&gt;
&lt;li&gt;LocalConnector.getResponses() accepts a String argument containing an HTTP request just as you would type it into a telnet window (like "GET /whatever HTTP/1.0" followed by two newlines) and returns an HTTP response, also as a String ("HTTP/200 OK blah blah..."). It's a primitive interface but it does work.&lt;/li&gt;
&lt;li&gt;The method mentioned above doesn't work very well if you want to GET binary data such as images (yeah, you could use "Content-Encoding: base64" but come on...). There is, fortunately, a variant of LocalConnector.getResponses() that accepts a ByteArrayBuffer along with a boolean "keepOpen" argument which I simply set to false. The method otherwise works just like the String variant.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As for a WebKit front-end, once you have Qt Jambi set up properly (with -Djava.library.path etc.) it's really easy to create a QWebView, point it at a URL and splash it all over your display. To prevent HTTP traffic, however, I needed to intercept requests coming from WebKit and route them to my LocalConnector:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The thing to do is QWebView.page().setNetworkAccessManager(magic), where "magic" is a subclass of QNetworkAccessManager that overrides createRequest() to do the necessary, well, magic.&lt;/li&gt;
&lt;li&gt;Despite superficial appearances, createRequest() actually accepts QNetworkRequest as a parameter and returns a QNetworkReply. Go figure. Additional parameters for createRequest() include an Operation enum to distinguish GETs from POSTs, and a QIODevice (think InputStream) containing the data of a POST request.&lt;/li&gt;
&lt;li&gt;Since QNetworkReply is also a stream-like QIODevice, returning custom content from createRequest() involves writing a QNetworkReply subclass that knows where to look for when clients call its read*() methods. This is not quite easy to do.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyway. After a few hours I had a web application running in a WebKit window with not a TCP packet in sight.The trouble came when I tried to process a POST request (yes, the application does involve filling out forms). What followed was a bout of frustration, head-scratching and just plain unhappiness that I don't wish upon anyone:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, you have to realize that Qt Jambi (including its WebKit component) is actually a C++ beast in sheep-like Java clothing. No matter how sweet the API is, the implementation is a bitch to debug even if, technically, you have access to the source code.&lt;/li&gt;
&lt;li&gt;What happened is that my createRequest() was called with a PostOperation as it should be but the accompanying QIODevice was empty. More specifically, calling canReadLine() on it returned false.&lt;/li&gt;
&lt;li&gt;Setting a breakpoint and examining the QIODevice's internals didn't show anything interesting (it was basically a proxy object for a C++ implementation).&lt;/li&gt;
&lt;li&gt;I resorted to the oldest tool in a programmer's toolbox: trace statements. Here's what they gave me:&lt;ul&gt;
&lt;li&gt;formData.isOpen(): true&lt;/li&gt;
&lt;li&gt;formData.isReadable(): true&lt;/li&gt;
&lt;li&gt;formData.isSequential(): true&lt;/li&gt;
&lt;li&gt;formData.atEnd(): true&lt;/li&gt;
&lt;li&gt;formData.bytesAvailable(): 0&lt;/li&gt;
&lt;li&gt;formData.size(): 0&lt;/li&gt;
&lt;li&gt;formData.pos(): 0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I tried routing regular HTTP post requests through the parent class and it worked even though the request objects looked exactly the same and returned exactly the same trace results! I was getting ready to give my own QNetworkRequest to the parent implementation that would trace all calls made to it but I tried getByte() and... there was data! WTF?! Point: QNetworkRequest was in a weird uninitialized state where it thought it was empty when it really wasn't. It snapped out of it when prodded for data.&lt;/p&gt;
&lt;p&gt;Another problem surfaced when I tried to get a Dojo Tree widget going. During initialization, Dojo loads its modules via AJAX and it was failing with the dreaded "NETWORK_ERR: XmlHttpRequest Exception 101". Cost me a lot of blind paths - I tried setting the .js files in different paths relative to the referring .jsp, reading compressed Dojo sources, diagnosing with window.alert() etc. In the end, I understood that WebKit was having some problem with the QNetworkReply I was producing. I made my Content-Length calculation more robust - no change. Finally, I looked at QNetworkReply objects produced by the regular QNetworkAccessManager and made sure all the attributes it fills out were also filled out in my replies. That helped. I know, I should have done it at the start but why did it matter with AJAX requests and not with regular ones? Oh well...&lt;/p&gt;
&lt;p&gt;The AJAX issue turned out to be the last major obstacle. My application now runs without opening any TCP ports and both WebKit and Jetty proved reasonably embeddable. I might use this set-up in other contexts as well.&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="Qt"></category><category term="Jetty"></category></entry><entry><title>Soundgraph iMON PAD vs. Linux 2.6.36</title><link href="http://meandering.journey.sk/soundgraph-imon-pad-vs-linux-2636.html" rel="alternate"></link><updated>2011-01-09T12:09:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2011-01-09:soundgraph-imon-pad-vs-linux-2636.html</id><summary type="html">&lt;p&gt;I use a Soundgraph iMON PAD remote control to command my home-theater PC. The remote stopped working when I upgraded my kernel from 2.6.33 to 2.6.36, due to major infrastructure changes that started in 2.6.35. At first I simply reverted to the older kernel but this week I had a few spare hours to figure out what was going on. In short, the iMON driver has been cleaned up by Jarod Wilson and &lt;a href="http://wilsonet.com/?p=85"&gt;included in the main kernel code base (finally!)&lt;/a&gt;. Its logic was also standardized to route its output to the Linux input layer rather than to the &lt;a href="http://www.lirc.org"&gt;LIRC&lt;/a&gt; daemon. This obviously requires some re-configuration of the daemon, as &lt;a href="http://old.nabble.com/Re:-Status-of-lirc-imon-usb-remotes-p28684857.html"&gt;Jarod explained&lt;/a&gt; on the LIRC mailing list.&lt;/p&gt;
&lt;p&gt;On my HTPC I had to put the following settings into &lt;em&gt;/etc/lirc/hardware.conf&lt;/em&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;DRIVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;devinput&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;DEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/dev/input/by-id/usb-15c2_ffdc-event-mouse&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I also had to adjust key codes in &lt;em&gt;/etc/lirc/lircd.conf&lt;/em&gt; (note that I only need only six keys for my remote-control software, &lt;a href="http://offhand.sourceforge.net/"&gt;Offhand&lt;/a&gt;; others should simply use &lt;a href="http://wilsonet.com/jarod/imon_stuff/imon-devinput-lirc/lircd.conf"&gt;Jarod's file&lt;/a&gt;):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;begin&lt;/span&gt; &lt;span class="n"&gt;codes&lt;/span&gt;
    &lt;span class="n"&gt;KEY_BACKSPACE&lt;/span&gt;            &lt;span class="mh"&gt;0x000E&lt;/span&gt;
    &lt;span class="n"&gt;KEY_COMPOSE&lt;/span&gt;              &lt;span class="mh"&gt;0x007F&lt;/span&gt;
    &lt;span class="n"&gt;KEY_CONTEXT_MENU&lt;/span&gt;         &lt;span class="mh"&gt;0x01B6&lt;/span&gt;
    &lt;span class="n"&gt;KEY_ENTER&lt;/span&gt;                &lt;span class="mh"&gt;0x001C&lt;/span&gt;
    &lt;span class="n"&gt;KEY_KEYBOARD&lt;/span&gt;             &lt;span class="mh"&gt;0x0176&lt;/span&gt;
    &lt;span class="n"&gt;KEY_SPACE&lt;/span&gt;                &lt;span class="mh"&gt;0x0039&lt;/span&gt;
&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;codes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, I had to adjust the .lircrc file used by Offhand:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;begin&lt;/span&gt;
      &lt;span class="n"&gt;prog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;offhand&lt;/span&gt;
      &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KEY_CONTEXT_MENU&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;back&lt;/span&gt;
    &lt;span class="n"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;begin&lt;/span&gt;
      &lt;span class="n"&gt;prog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;offhand&lt;/span&gt;
      &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KEY_COMPOSE&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forward&lt;/span&gt;
    &lt;span class="n"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;begin&lt;/span&gt;
      &lt;span class="n"&gt;prog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;offhand&lt;/span&gt;
      &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KEY_KEYBOARD&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt;
      &lt;span class="n"&gt;repeat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;begin&lt;/span&gt;
      &lt;span class="n"&gt;prog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;offhand&lt;/span&gt;
      &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KEY_ENTER&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt;
      &lt;span class="n"&gt;repeat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;begin&lt;/span&gt;
      &lt;span class="n"&gt;prog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;offhand&lt;/span&gt;
      &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KEY_SPACE&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ok&lt;/span&gt;
    &lt;span class="n"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;begin&lt;/span&gt;
      &lt;span class="n"&gt;prog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;offhand&lt;/span&gt;
      &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KEY_BACKSPACE&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cancel&lt;/span&gt;
    &lt;span class="n"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Separately, I also had to configure the iMON driver to forget about its mouse emulation mode. I did it by creating the file &lt;em&gt;/etc/modprobe.d/imon.conf&lt;/em&gt; containing&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="n"&gt;imon&lt;/span&gt; &lt;span class="n"&gt;nomouse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="IT misadventures"></category></entry><entry><title>Logitech diNovo Edge vs. aptosid</title><link href="http://meandering.journey.sk/logitech-dinovo-edge-vs-aptosid.html" rel="alternate"></link><updated>2011-01-06T13:09:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2011-01-06:logitech-dinovo-edge-vs-aptosid.html</id><summary type="html">&lt;p&gt;If you have no idea what a Logitech diNovo Edge could be, think about it for a while. You should quickly reach the obvious conclusion: it's a &lt;a href="http://www.logitech.com/en-us/keyboards/keyboard/devices/192"&gt;super-thin wireless keyboard&lt;/a&gt; featuring a built-in mouse pad. I happen to use one with my home-theater PC. It's a classy product, feels solid (even a bit luxurious) and works very well - that is, it used to work until I replaced the HTPC's ancient Kubuntu system with &lt;a href="http://www.aptosid.com"&gt;aptosid&lt;/a&gt;. Ever since then, I could use the keyboard in the bootloader but not once the system was up.&lt;/p&gt;
&lt;p&gt;aptosid, formerly known as sidux, is a running-release distribution of GNU/Linux descending from Debian Sid, the so-called "unstable" flavor of Debian. Being running-release means that instead of periodic releases of the entire environment, I get a constant trickle of new package versions as they are admitted into repositories. The upside is always being up-to-date. The downside is a not quite thoroughly tested environment where things occasionally stop working.&lt;/p&gt;
&lt;p&gt;The team managing aptosid does a pretty impressive job keeping the system stable. I'd been running it on my main notebook for a while and breakage had been pleasantly rare. I couldn't really fault the system for refusing to handle a relatively obscure piece of hardware. Given that I mostly run the HTPC with a remote and I manage the machine over the network, I had little need for the keyboard. Playing DVDs was the only scenario that was truly annoying. With a bit of time over the holidays, I decided to tackle it.&lt;/p&gt;
&lt;p&gt;I connected the keyboard to my notebook - having another, 100% reliable keyboard on the same computer made the investigation much smoother. I quickly foud out that the keyboard would work the first time its receiver dongle was plugged in, but after dis- and re-connecting it would behave identically as on the HTPC. A telling difference was the presence of an extra USB device: upon first connect, &lt;em&gt;lsusb&lt;/em&gt; would list three new devices while after re-connecting it displayed four.&lt;/p&gt;
&lt;p&gt;Googling the incriminated USB IDs produced &lt;a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=589388"&gt;the answer&lt;/a&gt;: udev is configured in Sid to run &lt;em&gt;hid2hci&lt;/em&gt; when the Edge is connected, making it a fully capable Bluetooth device rather than just a dumb USB keyboard. Except what I want is just a dumb USB keyboard.&lt;/p&gt;
&lt;p&gt;I tried adjusting udev rules on the HTPC to prevent &lt;em&gt;hid2hci&lt;/em&gt; from running but no matter what I tried, it still somehow managed to launch itself during the boot sequence. I ended up replacing &lt;em&gt;/usr/sbin/hid2hci&lt;/em&gt; with a shell script looking like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pretending to run hid2hci&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ever since then, I've been navigating DVD menus with much more flair. The keyboard suddenly seems brand new now that it works! Dead keyboard wasn't my HTPC's only problem, however. The story is set to continue...&lt;/p&gt;</summary><category term="IT misadventures"></category></entry><entry><title>Akai EWI USB and Linux, part 3</title><link href="http://meandering.journey.sk/akai-ewi-usb-and-linux-part-3.html" rel="alternate"></link><updated>2010-11-23T05:26:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-11-23:akai-ewi-usb-and-linux-part-3.html</id><summary type="html">&lt;p&gt;In &lt;a href="http://meandering.journey.sk/akai-ewi-usb-and-linux-part-1.html"&gt;part 1&lt;/a&gt; and &lt;a href="http://meandering.journey.sk/akai-ewi-usb-and-linux-part-2.html"&gt;part 2&lt;/a&gt; of my Akai odyssey, I've described getting the EWI to produce sound and configuring fluidsynth (plus QSynth) for optimum performance without latency. I was happy with my setup but after a while I started craving a little convenience.&lt;/p&gt;
&lt;p&gt;Setting up a playing session is a silly affair involving the instrument itself, my notebook, a pair of headphones, 2 cables and 4 connectors. The same goes for winding things down after playing. It used to be even more obnoxious since I had to manually start and exit the QSynth software. I knew that Linux can react to USB hot-plug events and this reaction can be configured; so I decided to make QSynth start and stop automagically.&lt;/p&gt;
&lt;p&gt;The system-du-jour for reacting to hotplug events in Linux is currently &lt;em&gt;udev&lt;/em&gt;. Debian's wiki happens to have a &lt;a href="http://wiki.debian.org/udev"&gt;very nice udev page&lt;/a&gt; which explains that all one needs to do is to put a line in a file under &lt;em&gt;/etc/udev/rules.d&lt;/em&gt;. One can either use one of the existing files under that directory or create a new one, which is what I did just to keep things tidy.&lt;/p&gt;
&lt;p&gt;Entries in udev rule files rely on an IF-THEN syntax where the IF part indicates in what circumstances the rule should trigger and THEN stipulates what should be done. The syntax is quite restrictive in that each rule has to fit on a line - i.e. no fancy procedural tricks. The IF part offers a lot of ways to pick up an event, though. One can specify the BUS on which the event happens, the NAME of the device, the ACTION that the event represents, expected environment variable values etc. I found the options quite extensive, making it easy to specify any event.&lt;/p&gt;
&lt;p&gt;Having to run &lt;em&gt;sudo udevadm control --reload-rules&lt;/em&gt; after each rule update was a bit annoying but what really held me up was figuring out which events the rule should react to. I found out that plugging the EWI into and out of the USB port caused entire cascades of events with different characteristics. I eventually settled on the following rules:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;ATTR&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;idVendor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;09e8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ATTR&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;idProduct&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;006d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RUN&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/usr/local/bin/ewi&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;DEVNAME&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/dev/snd/midiC1D0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;remove&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;RUN&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/usr/local/bin/ewi&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first rule fires when I plug the device in, the second one upon unplugging. Both rules launch the same shell script when invoked. The shell script itself looks like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ACTION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;add&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
 &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; 
 &lt;span class="n"&gt;xhost&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;
 &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;DISPLAY&lt;/span&gt;&lt;span class="o"&gt;=:&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;
 &lt;span class="n"&gt;su&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="n"&gt;qsynth&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="n"&gt;elif&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ACTION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;remove&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
 &lt;span class="n"&gt;killall&lt;/span&gt; &lt;span class="n"&gt;qsynth&lt;/span&gt;
&lt;span class="n"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The "add" section contains incantations needed to properly launch a GUI program from a shell script. I picked them up in some forum and have unfortunately lost the link. Kudos to the original poster, anyway.&lt;/p&gt;
&lt;p&gt;With this bit of scripting, my EWI is the very definition of Plug-and-Play, as well as Stop-Playing-and-Unplug ;-) . All is not perfect, though; one problem remains and it's completely unrelated to udev. Since I use legacy OSS emulation &lt;a href="http://meandering.journey.sk/akai-ewi-usb-and-linux-part-2.html"&gt;due to latency issues&lt;/a&gt;, I cannot run any other sound-producing application while QSynth is active (OSS doesn't support software mixing). I don't mind that just yet but as I get my fingerings in order and advance my playing I will need to resolve it. The saga continues...&lt;/p&gt;</summary><category term="music"></category><category term="IT misadventures"></category></entry><entry><title>Disabling ACPI in OpenBSD 4.8</title><link href="http://meandering.journey.sk/disabling-acpi-in-openbsd-48.html" rel="alternate"></link><updated>2010-11-21T08:56:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-11-21:disabling-acpi-in-openbsd-48.html</id><summary type="html">&lt;p&gt;As I've &lt;a href="http://meandering.journey.sk/installing-openbsd-48-on-an-hp-mini-5101.html"&gt;mentioned&lt;/a&gt;, OpenBSD 4.8 can't boot on a HP Mini 5101 netbook due to an apparent ACPI issue. The way to work around the issue is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When booting, enter &lt;strong&gt;boot -c&lt;/strong&gt; at the &lt;em&gt;boot&amp;gt;&lt;/em&gt; prompt. A &lt;em&gt;UKC&amp;gt;&lt;/em&gt; prompt will appear shortly.&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;disable acpi&lt;/strong&gt;, then &lt;strong&gt;quit&lt;/strong&gt;; the kernel should proceed to 
boot successfully to the login prompt.&lt;/li&gt;
&lt;li&gt;After logging in, enter &lt;strong&gt;su&lt;/strong&gt; (sudo won't work since you haven't edited &lt;em&gt;/etc/sudoers&lt;/em&gt; yet).&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;config -e -o bsd.noacpi /bsd&lt;/strong&gt;; you will see the &lt;em&gt;UKC&amp;gt;&lt;/em&gt; prompt again.&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;disable acpi&lt;/strong&gt;, then &lt;strong&gt;quit&lt;/strong&gt;; you should be back in the shell, with a new file called &lt;em&gt;bsd.noacpi&lt;/em&gt; in the current directory.&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;mv /bsd /bsd.acpi &amp;amp;&amp;amp; mv bsd.noacpi /bsd&lt;/strong&gt; to replace the current kernel with the new one.&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;chmod 0644 /bsd&lt;/strong&gt; to set proper permissions for the new kernel.&lt;/li&gt;
&lt;li&gt;Enter &lt;strong&gt;reboot&lt;/strong&gt; to test things out; the computer should now boot into the login prompt without any assistance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What's going on here? UKC is the &lt;em&gt;User Kernel Config&lt;/em&gt;, OpenBSD's tool for tweaking a kernel without re-compiling it. As we've seen, it can be used to great effect even during the boot process. What's perhaps even more impressive, UKC can also tweak the currently running kernel without having to reboot. All relevant info can be found by entering &lt;strong&gt;man UKC&lt;/strong&gt; and &lt;strong&gt;man config&lt;/strong&gt; in the OpenBSD shell.&lt;/p&gt;</summary><category term="OpenBSD"></category><category term="howto"></category></entry><entry><title>Installing OpenBSD 4.8 on an HP Mini 5101</title><link href="http://meandering.journey.sk/installing-openbsd-48-on-an-hp-mini-5101.html" rel="alternate"></link><updated>2010-11-19T22:14:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-11-19:installing-openbsd-48-on-an-hp-mini-5101.html</id><summary type="html">&lt;p&gt;I used to be baffled by the netbook form factor. I could see no use for a toy notebook nor for an overgrown PDA. One day, as I was reviewing the specs of yet another netbook model somewhere, it hit me: this is a light-duty server with a built-in console. No more searching for a PS/2 keyboard down in the basement! What a concept!&lt;/p&gt;
&lt;p&gt;I had been thinking of building a home server for some time so I went out and bought an Acer Aspire One. I put OpenBSD 4.5 on it and it has perfomed beautifully. It's served HTTP, SMTP, POP3 and the Squeezebox streaming protocol, as well as shared a printer and provided a backup destination for other boxes on the network.&lt;/p&gt;
&lt;p&gt;My only worry was that it might break down - after all, netbooks are not designed to be turned on 24/7. I decided to buy another one and periodically sync its disk from the "master" machine so that I could just swap them in case of need. Alas, the same model was no longer available, much to my disappointment. I ended up getting a pair of HP Mini 5101s instead.&lt;/p&gt;
&lt;p&gt;The main problem with installing an OS on a netbook is the lack of a CD-ROM drive. With the Acer I'd performed a network install using pxeboot but it was not something I would endure again if I could help it. I decided to try installing from a USB stick instead. First I had to create the installation medium, of course. I quickly found &lt;a href="http://old.nabble.com/Install-OpenBSD-from-USB---td15057477.html"&gt;a great thread&lt;/a&gt; at misc@openbsd.org that basically said one can either copy the install48.iso straight onto the raw USB stick device (under Linux this would be &lt;em&gt;dd if=install48.iso of=/dev/sdb&lt;/em&gt; or something) or one can boot the OpenBSD CD-ROM and install onto the USB stick just like onto a hard drive.&lt;/p&gt;
&lt;p&gt;People on the thread couldn't agree on which method was better. I tried the simpler &lt;em&gt;dd&lt;/em&gt; method first but the USB stick would not boot on the Mini. Funnily enough, it did boot on my ThinkPad (BIOS being the X factor). With a bit of trepidation, I booted the ThinkPad from the OpenBSD CD and installed onto the USB stick, hoping I would not ruin my notebook's hard disk instead. All went well and this time the USB stick did boot on the Mini.&lt;/p&gt;
&lt;p&gt;Installation onto the Mini from the USB stick was uneventful. For the first time after years I had the luxury of installing on the entire hard drive, letting the installer do the partitioning for me. I could reach all BSD packages over the network without problems as I had an Ethernet cable plugged into the machine and DHCP worked just fine.&lt;/p&gt;
&lt;p&gt;Rebooting after the install ended in a kernel panic, however. Neither &lt;em&gt;bsd.mp&lt;/em&gt; nor &lt;em&gt;bsd.sp&lt;/em&gt; at the boot prompt seemed to help. Off to Google I was yet again, with "openbsd hp mini 5101". It turned out someone had &lt;a href="http://kerneltrap.org/mailarchive/openbsd-misc/2010/9/3/6691/thread"&gt;seen the problem before&lt;/a&gt; and they solved it by &lt;a href="http://www.mail-archive.com/tech@openbsd.org/msg00278.html"&gt;turning off ACPI&lt;/a&gt; at the boot prompt. It helped me as well and I was finally able to log into my new OpenBSD system. I've yet to figure out how to disable ACPI permanently. I also have to see how running without ACPI affects power consumption and temperatures. Other than that, the Mini seems to handle OpenBSD just fine.&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="OpenBSD"></category></entry><entry><title>Akai EWI USB and Linux, part 2</title><link href="http://meandering.journey.sk/akai-ewi-usb-and-linux-part-2.html" rel="alternate"></link><updated>2010-11-19T06:15:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-11-19:akai-ewi-usb-and-linux-part-2.html</id><summary type="html">&lt;p&gt;&lt;a href="http://meandering.journey.sk/akai-ewi-usb-and-linux-part-1.html"&gt;Part 1&lt;/a&gt; of my Akai saga ended with the EWI producing sound, a disappearing symlink and a shocking latency. This was unacceptable.&lt;/p&gt;
&lt;p&gt;To get a flavor of how things should work, I did something I hadn't done in months: boot into Windows. I dutifully installed the software from EWI's companion CD and tried a few tones. The software itself was nice, polished and simple enough, except that the latency was pretty much the same as under Linux! Google said one should install a different audio stack, "winaudio" or something, but I had no such inclination.&lt;/p&gt;
&lt;p&gt;I pulled out the big guns instead. I installed &lt;a href="http://www.64studio.com/"&gt;64studio&lt;/a&gt; on a spare partition. It's a specialized multimedia-production Linux with pre-configured &lt;a href="http://jackaudio.org/node/11"&gt;JACK&lt;/a&gt; low-latency audio server etc. and I was certain that it would help. Except it wouldn't talk to my graphics card. Next up was &lt;a href="http://ubuntustudio.org/"&gt;Ubuntu Studio&lt;/a&gt; - same purpose, different vendor. It installed beautifully, had tons of pre-installed audio software including JACK and QSynth and... exhibited the same latency problem as my regular aptosid and Windows. It was back to the drawing board.&lt;/p&gt;
&lt;p&gt;I knew it wasn't a hardware problem - when I ran fluidsynth in verbose mode it would print MIDI events very swiftly, only the sound was lagging. CPU load was negligible so it wasn't any slowness on my computer's part, either. I tried the only thing I could think of - further tweaking fluidsynth's options, this time on the output (audio) side. Lo and behold, when I chose the legacy OSS output driver the system started reacting like a &lt;a href="http://l.yimg.com/eb/ymv/us/img/hv/photo/movie_pix/dreamworks_skg/over_the_hedge/steve_carell/overthehedge_poster.jpg"&gt;caffeine-doped squirrel&lt;/a&gt;. Sound was coming out almost before I touched the pads. I had reached the Akai EWI nirvana.&lt;/p&gt;
&lt;p&gt;The utterly perplexing aspect of this outcome is that I don't even have true OSS on my system; virtually no-one has these days. OSS on my notebook is just a special legacy emulation mode of ALSA, yet it performs better than ALSA proper. Go figure...&lt;/p&gt;
&lt;p&gt;I had basically two options to resolve the disappearing symlink from &lt;em&gt;/dev/snd/midiC1D0&lt;/em&gt; to &lt;em&gt;/dev/snd/midiC0D0&lt;/em&gt;. I could either automate its creation in a start-up script or I could remove the need for it, i.e. make fluidsynth talk to &lt;em&gt;midiC1D0&lt;/em&gt; as it should. The latter was obviously a cleaner solution so I started pursuing it. Tweaking the command line had been useless before, hence I downloaded the source code (&lt;em&gt;apt-get source fluidsynth&lt;/em&gt;) and started looking around the error messages I was getting ("Unknown RawMidi" etc.).&lt;/p&gt;
&lt;p&gt;It turned out that when fluidsynth documentation says I should specify a MIDI device, it doesn't really mean "a path to a device file" but rather "an ALSA device ID", at least when &lt;em&gt;alsa_raw&lt;/em&gt; is specified as the MIDI driver. ALSA device IDs have a special syntax that looks like "hw0,0", with the first number identifying a sound card and the second one determining a feature of that sound card one wants to work with. I tried to formulate a device ID for &lt;em&gt;midiC1D0&lt;/em&gt; but couldn't figure it out.&lt;/p&gt;
&lt;p&gt;Looking through the code, I noticed that when no MIDI device is explicitly specified fluidsynth deduces an ID from various ALSA settings, mainly the default sound card. It occurred to me that I could set the EWI as the default sound card. I remembered that ALSA reads user-specific configuration from &lt;em&gt;~/.asoundrc&lt;/em&gt; and a short trip to Google yielded this incantation: &lt;em&gt;defaults.rawmidi.card 1&lt;/em&gt;. Having that line in my &lt;em&gt;.asoundrc&lt;/em&gt; finally let fluidsynth talk to the EWI without a symlink hack. This wasn't as exciting as doing away with the latency but I felt satisfied that things were finally set up the way they should be.&lt;/p&gt;
&lt;p&gt;In summary, all I had needed from the start was that single line in &lt;em&gt;.asoundrc&lt;/em&gt; and a simple &lt;em&gt;fluidsynth -m alsa_raw -a oss TimGM6mb.sf2&lt;/em&gt; (I use the soundfonts provided on EWI's companion CD). It took a while to get there but I finally had a straightforward way to play the EWI through my notebook.&lt;/p&gt;
&lt;p&gt;Once I knew what to set in fluidsynth I configured QSynth with the same settings to get a nice graphical UI for switching sounds and tweaking the effects (fluidsynth has built-in reverb and chorus). This was really comfortable and I became spoiled after a while. It started bugging me that I had to launch QSynth by hand each time I wanted to play. I knew that the computer should be able to do it automatically when the EWI gets plugged in. It should even be able to exit QSynth when the EWI gets unplugged. I decided to tackle that one as well to make my playing truly comfortable. It's a story for another post, however...&lt;/p&gt;</summary><category term="music"></category><category term="IT misadventures"></category></entry><entry><title>Akai EWI USB and Linux, part 1</title><link href="http://meandering.journey.sk/akai-ewi-usb-and-linux-part-1.html" rel="alternate"></link><updated>2010-11-14T06:07:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-11-14:akai-ewi-usb-and-linux-part-1.html</id><summary type="html">&lt;p&gt;As I've &lt;a href="http://meandering.journey.sk/akai-ewi-usb-and-me.html"&gt;mentioned before&lt;/a&gt;, I recently came into posession of an Akai Electronic Wind Instrument, USB edition. To be of any use, this wonderful artifact must be connected to a computer running proper software. That on EWI's companion CD supports only MS Windows and Mac OS X so with my GNU/Linux notebook I was on my own.&lt;/p&gt;
&lt;p&gt;I had obviously checked on-line for other people's experiences with the EWI and Linux before purchasing it but all I knew was that yes, it does work. I use a rolling-release Debian-based distro called &lt;a href="http://www.aptosid.com/"&gt;aptosid&lt;/a&gt; (formerly known as sidux) which means I tend to be fairly up-to-date as far as the kernel and drivers are concerned. I wasn't expecting any major problems but I was ready for anything.&lt;/p&gt;
&lt;p&gt;I started with the basics: I saved the listing of &lt;em&gt;/dev&lt;/em&gt; and &lt;em&gt;/dev/snd&lt;/em&gt; into a text file and plugged the EWI in. A bunch of messages in &lt;em&gt;dmesg&lt;/em&gt; confirmed that the device was detected and recognized. Comparing the listing of &lt;em&gt;/dev/snd&lt;/em&gt; with the previous version yielded &lt;em&gt;/dev/snd/midiC1D0&lt;/em&gt; as a new device and &lt;em&gt;sudo cat /dev/snd/midiC1D0&lt;/em&gt; produced a flurry of line noise as I tried playing the instrument. The low-level set-up, then, was exactly as it should be: pure plug-n'-play.&lt;/p&gt;
&lt;p&gt;With my confidence boosted, I turned straight to &lt;a href="http://qsynth.sourceforge.net/qsynth-index.html"&gt;QSynth&lt;/a&gt; which is a GUI front-end for &lt;a href="http://sourceforge.net/apps/trac/fluidsynth/"&gt;fluidsynth&lt;/a&gt;, a powerful &lt;a href="http://en.wikipedia.org/wiki/Soundfont"&gt;SoundFont&lt;/a&gt;-based command-line software synthesizer. QSynth has a nice setup dialog with separate tabs for the MIDI side (input) and the audio side (output). Unfortunately, the configuration options accurately reflect the mess that is Linux audio support, with four MIDI drivers and five audio drivers to choose from and fiddle with. To make a long story short, I failed to find a combination of settings that would work.&lt;/p&gt;
&lt;p&gt;I needed clarity and precision, hence I turned to working with fluidsynth directly. After reading the manual, the alsa_raw driver looked like the most promising option for MIDI input as I had used ALSA to get a MIDI port on another computer going a few years ago. When I used alsa_raw without specifying a MIDI device path, however, fluidsynth would say "Error opening ALSA raw MIDI port". When I did specify &lt;em&gt;/dev/snd/midiC1D0&lt;/em&gt; as the MIDI device I got "Unknown RawMidi /dev/snd/midiC1D0". I somehow remembered that during my previous MIDI experiments the device was &lt;em&gt;midiC0D0&lt;/em&gt; rather than &lt;em&gt;midiC1D0&lt;/em&gt; so I tried &lt;em&gt;ln -s /dev/snd/midiC1D0 /dev/snd/midiC0D0&lt;/em&gt; and ran fluidsynth without giving it a device path. Bingo! I had sound!&lt;/p&gt;
&lt;p&gt;There were two serious problems with this setup. First, the &lt;em&gt;midiC0D0&lt;/em&gt; symlink disappeared at every reboot, forcing me to re-create it over and over. More seriously, the audio lagged some 100 to 300 ms behind MIDI input, making the EWI so sluggish as to be unplayable. What was I to do? I will reveal the dramatic resolution of both issues in another post; stay tuned...&lt;/p&gt;</summary><category term="music"></category><category term="IT misadventures"></category></entry><entry><title>Akai EWI USB and me</title><link href="http://meandering.journey.sk/akai-ewi-usb-and-me.html" rel="alternate"></link><updated>2010-11-12T05:47:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-11-12:akai-ewi-usb-and-me.html</id><summary type="html">&lt;p&gt;At the recent &lt;a href="http://meandering.journey.sk/bratislava-jazz-days-2010.html"&gt;Bratislava Jazz Days&lt;/a&gt;, I was intrigued by the sight of Marián Jaslovský of Silvia Fourporation playing the &lt;a href="http://www.akaipro.com/ewi4000s"&gt;Akai EWI 4000s&lt;/a&gt; electronic wind instrument. I used to play tenor saxophone as a hobby but I put it on hold a few years ago mainly due to the fact I had no way of practicing without disturbing the neighbors (I live in an apartment). The EWI seemed like a great way around that as it can be listened to via earphones. I had considered buying one before but I was put off by the expense. With my interest now re-kindled, I looked into the matter again and found the prices much more likeable. Crucially, I discovered the new &lt;a href="http://www.akaipro.com/ewiusb"&gt;USB variant&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The difference between the older 4000s and the USB model boils down to the latter being strictly a MIDI peripheral for a computer. It has no audio output (i.e. no built-in synthesizer) and it's powered only via its USB connection. Compared to its older sibling, the EWI USB is a no-fuss, light, inexpensive affair. Still, it is by no means a toy. It features a robustly built body with virtually no moving parts (there are touch-sensitive metallic pads instead of keys) and the sound one can produce is only limited by the quality of the synthesizer the instrument is plugged into.&lt;/p&gt;
&lt;p&gt;Having spent some time with the unit since I purchased it, I must say I'm thoroughly satisfied. It feels very natural in my hands. The mouthpiece is completely different from the saxophone but I knew I wasn't going to replicate the experience perfectly anyway. The tactile feedback is different as well since the "keys" don't move but I find the experience very much similar to what I was used to. Touching a pad feels just like finishing a key-press in that there is a definite, solid limit to the motion of the finger. And when I set the software synthesizer to the right sound it really does feel just like an acoustic wind instrument, albeit not a saxophone. The feeling is quite thrilling and has to be experienced to be believed.&lt;/p&gt;
&lt;p&gt;There are quirks as well, of course. The instrument cannot be simply picked up and played - I have to uncoil the cables, plug the USB cable into the EWI, plug the other end into my notebook, plug in the headphones - oh, and boot the notebook and log in, obviously. So there is a "transaction cost" to every session, one cannot just pick the thing up for five relaxing minutes. This would be different if I had a dedicated netbook just for the EWI as many people seem to prefer (especially those who also perform) but I don't really mind. I need hundreds of hours of practice to get back into form, anyway.&lt;/p&gt;
&lt;p&gt;Another difficulty is the mouthpiece which puts up a lot of resistance. I once tried playing an oboe and this feels similar - it takes more energy to push air through the mouthpiece than was the case with my saxophone. I believe this is something I simply need to get used to but right now I often end up out of breath.&lt;/p&gt;
&lt;p&gt;One last quibble I have with the instrument is the feeble neckstrap that simply doesn't do it justice. I already had to mend it with superglue. But that's really a minor point and I'm sure most wind players will have a quality neckstrap lying around.&lt;/p&gt;
&lt;p&gt;One thing I haven't mentioned is the veritable odyssey involved in making the thing work with my computer. I use Linux so I knew it wouldn't be that easy; it wasn't and there are still a few details to work out. That's a topic for another post, however. My main point for now: the EWI wants to be played. When I come home from work and look at it I immediately feel like picking it up and taking a few practice runs. I find that simply priceless.&lt;/p&gt;</summary><category term="music"></category></entry><entry><title>The pyKonsole distraction</title><link href="http://meandering.journey.sk/the-pykonsole-distraction.html" rel="alternate"></link><updated>2010-11-08T22:24:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-11-08:the-pykonsole-distraction.html</id><summary type="html">&lt;p&gt;I use KDE 4. One of my workspaces is configured with a "dashboard" activity, displaying all the usual monitoring widgets (CPU, RAM, network, temperatures). When my notebook starts acting slow, I hop over to the dashboard to check out my CPU load. If it's high I whip out Konsole and launch &lt;strong&gt;htop&lt;/strong&gt; to find the culprit. It has occurred to me that it would really be nice if I could see the CPU hog right away.&lt;/p&gt;
&lt;p&gt;I realized there must be a process-monitor plasmoid out there but a Konsole widget seemed so much more flexible. Plasmacon seemed to fit the bill and I had it on the desktop in next to no time. It turned out, however, that it has no facility to launch a command at start-up. I figured it should be easy to extend the widget as it's written in Python. Checking the documentation for Konsole's KPart turned up two promising methods: &lt;strong&gt;sendInput()&lt;/strong&gt; and &lt;strong&gt;startProgram()&lt;/strong&gt;. Neither of them worked.&lt;/p&gt;
&lt;p&gt;I inserted some trace code into Plasmacon's init method and it turned out that the object Plasmacon creates is just a plain &lt;strong&gt;KParts::ReadOnlyPart&lt;/strong&gt;. Browsing PyKDE documentation brought the answer: PyKDE doesn't include a binding for kdebase-apps. The upshot is that you can create a &lt;strong&gt;Konsole::Part&lt;/strong&gt; instance from Python but you can't access its full API.&lt;/p&gt;
&lt;p&gt;Things didn't look so trivial anymore but I decided to have a go at creating the necessary bindings. PyKDE uses a generator called SIP (&lt;strong&gt;apt-get install python-sip&lt;/strong&gt; in Debian) to create Python modules from C++ headers and deceptively simple spec files. I tried to write a SIP spec for Konsole starting from &lt;strong&gt;Konsole::Part&lt;/strong&gt;'s header file and various &lt;strong&gt;.sip&lt;/strong&gt; files I dug up. I have to say SIP provides rather modest feedback. I ended up stuck with a terse "syntax error" message providing no detail at all.&lt;/p&gt;
&lt;p&gt;I noticed a little comment in one of the &lt;strong&gt;.sip&lt;/strong&gt; files, saying "Generated by twine". Googling for twine proved to be quite a challenge; this is really obscure code used primarily by PyKDE creators and few others. There is no website nor documentation. Another comment in a &lt;strong&gt;.sip&lt;/strong&gt; file provided the decisive clue: a mention of "twine2". It brought me to &lt;a href="http://gitorious.org/twine2"&gt;http://gitorious.org/twine2&lt;/a&gt; where the tool currently seems to live. And yes, it's a generator of input for a generator. Go figure...&lt;/p&gt;
&lt;p&gt;Writing a twine2 script seemed quite daunting but I came up with an entirely different approach: what if I could talk to the Konsole via DBus? I quickly discovered &lt;strong&gt;qdbusviewer&lt;/strong&gt; and clicked around to see what I could do. Unfortunately, while the &lt;strong&gt;org.kde.plasma-desktop&lt;/strong&gt; service does expose a &lt;strong&gt;/Konsole&lt;/strong&gt; object, it doesn't provide its Sessions. Some could be found under &lt;strong&gt;org.kde.konsole&lt;/strong&gt; but they included strictly sessions in proper Konsole windows; the one in the Plasma widget didn't show up in the list. I had to go back to twine2.&lt;/p&gt;
&lt;p&gt;Except I didn't. The ability to delve into the guts of open source software is one of its most useful aspects but there is a limit to how far down the rabbit hole one can reasonably afford to go. I've reached that limit and had to accept that, for the foreseeable future, I will simply not have a process monitor on my dashboard. Worse things have happened.&lt;/p&gt;</summary><category term="IT misadventures"></category><category term="KDE"></category></entry><entry><title>Bratislava Jazz Days 2010</title><link href="http://meandering.journey.sk/bratislava-jazz-days-2010.html" rel="alternate"></link><updated>2010-11-07T10:52:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-11-07:bratislava-jazz-days-2010.html</id><summary type="html">&lt;p&gt;The pre-Halloween weekend is one of the year's highlights for anyone who lives here in &lt;a href="maps.google.com/maps?q=Bratislava"&gt;Bratislava&lt;/a&gt; and likes jazz or good music in general. The reason, of course, is the &lt;a href="http://www.bjd.sk/"&gt;Bratislava Jazz Days&lt;/a&gt;. I've been attending since 1994 and I have yet to be disappointed.&lt;/p&gt;
&lt;p&gt;Bratislava currently markets itself as &lt;a href="http://www.bratislava.sk/en/"&gt;The Little Big City&lt;/a&gt; and BJD fits nicely into that concept. The format has stabilized in recent years: three nights (Friday to Sunday) on two stages with about four acts per stage per night. The two stages are on the opposite ends of a Communist-era venue called the PKO ("Park of Culture and Relaxation"). To get from one stage to the other, one has to cross a large lobby. That's where the beer is. It's also the place where people catch up with friends they may not have seen since the previous year. Getting together with friends is actually the most important part of the Jazz Days, although some people may not even realize it - after all, most of the time is spent listening to music.&lt;/p&gt;
&lt;p&gt;The festival offers a great opportunity to expand one's musical horizons; that's why I buy tickets for all three nights and never worry too much about who's playing. The big names (Betty Carter, Kurt Elling, Courtney Pine etc.) do provide unforgettable experiences but the ticket really earns its worth when an &lt;a href="http://www.brauer-meiri.com"&gt;Elias Meiri&lt;/a&gt; or a &lt;a href="http://www.karrin.com"&gt;Karrin Allyson&lt;/a&gt; comes on stage and thoroughly charms the audience.&lt;/p&gt;
&lt;p&gt;BJD 2010 brought about a slight change in scheduling. In previous years, B-stage acts had been timed to fill in the breaks between concerts on the main stage. This year's B stage got expanded (with longer shows and four acts per night instead of three) so one had to actually choose between them. A-stage line-ups were definitely more intriguing so that's where I ended up spending most of my time.&lt;/p&gt;
&lt;p&gt;The festival's opening act was my good friend &lt;a href="http://www.youtube.com/watch?v=Gf9OpoCPyCM"&gt;Sisa Michalidesová&lt;/a&gt; performing music she had composed for the movie "Zimní kúzelníci" (Winter Magicians) with an absolutely stellar band featuring some of Slovakia's best musicians (Michal Žáček on soprano saxophone, Peter Preložník on keyboards, Boris Lenko on accordion etc.). The work had been adapted for the band members and also to allow improvized solos but it wasn't quite jazz; as with many true masters, Sisa's music evades precise classification. It was compact yet diverse, evocative, perfectly arranged and beautifully played. The result was much more impressive than on the soundtrack CD and I was quite happy for Sisa.&lt;/p&gt;
&lt;p&gt;Up next was the Polish singer &lt;a href="http://www.zaryan.com/"&gt;Aga Zaryan&lt;/a&gt; who mesmerized us with her powerful stage presence. She has a beautiful, expressive face and a captivating voice that she commanded with calm confidence as she sang some quite challenging tunes from her repertoire. Her band was certainly up to the task, they blended with the singing to deliver a smooth, seamless experience. Aga Zaryan spends a lot of time in New York so her English was flawless (not necessarily the case with Slavic singers) though she could have performed more songs in Polish which I find very pleasant to listen to.&lt;/p&gt;
&lt;p&gt;Ethereal singing was followed by accordion equilibristics soaked in passion and bittersweet nostalgia. &lt;a href="http://en.wikipedia.org/wiki/Richard_Galliano"&gt;Richard Galliano&lt;/a&gt; is widely regarded as the world's best accordionist and he provided ample justification for that view. His playing was out of this world, turning the instrument into sonic fireworks, bursting with cascades upon cascades of tones. Yet he proceeded with absolute ease, kind of "by the way", he never struggled with the accordion at all. He was fully focused on the &lt;em&gt;point&lt;/em&gt; of the music, putting his soul into every note. Such a combination of virtuosity and sincerity is indeed rare in musicians and I couldn't help but be completely absorbed. Oh, and he had a band with him; they were fully absorbed as well. This was definitely Friday night's highlight, despite the fact that neither Galliano's genre nor accordion music as such count among my favorites.&lt;/p&gt;
&lt;p&gt;Headliners at BJD occasionally fizzle out and so was the case with &lt;a href="http://www.zapmama.be/"&gt;Zap Mama&lt;/a&gt;, a formation led by the Belgian singer of Congolese origins Marie Daulne. The band had great difficulty getting to the festival after having a flight canceled; they did start on time but with no sound check. It's hard to say if that had any impact or not but the performance was a bland fusion of light jazz with African and new-age elements, with a bit of theatrics thrown in that didn't quite work, especially after Richard Galliano. I left during the third song, happy to get home before 1 AM.&lt;/p&gt;
&lt;p&gt;I couldn't attend on Saturday due to family commitments but they say &lt;a href="http://www.tromboneshorty.com/"&gt;Trombone Shorty&lt;/a&gt; almost tore down the building with his enormous energy. Oh well, maybe next time.&lt;/p&gt;
&lt;p&gt;Sunday night started off with the &lt;a href="http://www.gustavbrom-bigband.com/"&gt;Gustav Brom Big Band&lt;/a&gt;. I'm not really into big-band music but I do enjoy the way so many instruments blend into a cohesive sound - provided they actually do, of course. The Gustav Brom Big Band is a Czecho-Slovak affair with some rather excellent musicians (Radovan Tariška and Ondřej Čtveráček on saxophones etc.) constrained by the usual logistical issues of getting so many people together often enough. Still, their performance was quite impressive and a good way to get the evening going.&lt;/p&gt;
&lt;p&gt;The American trumpeter &lt;a href="http://christianscott.tv/"&gt;Christian Scott&lt;/a&gt; with his Quintet brought out the serious stuff. Young yet very mature musicians produced an hour of intense, uncompromising, no-nonsense jazz at a very high technical level. The leader had a whiff of arrogance about him at times but he was earnest rather than flashy and he could definitely back it up with supreme playing. I must confess this late in the festival my ears were getting saturated and I couldn't perceive the non-trivial performance as well as I would have liked to. I know it was probably Sunday's highlight but it kind of went beyond me at that point.&lt;/p&gt;
&lt;p&gt;Fortunately, Scott's quintet was followed by lighter fare in the form of veteran guitarist &lt;a href="http://www.larrycarlton.com/"&gt;Larry Carlton&lt;/a&gt;'s trio. Carlton is very obviously a skilled session musician who has no problem playing anything you throw his way, which made watching his own show all the more interesting. The set was colorful, with easy melodic numbers giving way to harder, more bluesy tunes. It was no earth-shattering experience but the musicians visibly enjoyed themselves and the intimate trio setting provided a nice epilogue to this year's festival.&lt;/p&gt;
&lt;p&gt;Well, actually, Carlton was followed by Sunday's "headliners", Shakatak. It is a recent tradition at the Jazz Days to have a more pop-sounding act at the very end. I think it's actually very smart as those facing a busy Monday can leave early without much remorse. The strategy gives many people a sort of anti-climax feel, however, prompting an infamous sarcastic remark by an attendee that "next year they'll bring AC/DC" (the guy was fleeing from Level 42, by the way). Shakatak is a pop-jazz band that had a huge crossover hit in the '80s and they still happily tour the world thanks to that. More power to them, I say, but their show felt a bit worn so I left after about two songs.&lt;/p&gt;
&lt;p&gt;As I'd mentioned before, I spent most of my time at the A stage. Excursions to the B-stage hall served as welcome diversions. The atmosphere there tends to be more muted, intimate, club-like. The bands were interesting especially on Sunday - the local Groove Brothers, a Hungarian world-music ensemble featuring hypnotic percussion duets, as well as Silvia Fourporation with its whimsical lyrics and a laid-back attitude.&lt;/p&gt;
&lt;p&gt;I have to say this year's Jazz Days did a fine job of holding up the usual standards of their venerable franchise. Peter Lipa and other organizers at the Rock &amp;amp; Pop agency deserve much credit for keeping the magic alive; despite permanent worries about the future of the venue, Bratislava Jazz Days is poised to remain one of the top events for jazz fans in this neck of the woods.&lt;/p&gt;</summary><category term="music"></category></entry><entry><title>A short Blojsom FAQ</title><link href="http://meandering.journey.sk/a-short-blojsom-faq.html" rel="alternate"></link><updated>2010-11-06T08:07:00+01:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-11-06:a-short-blojsom-faq.html</id><summary type="html">&lt;p&gt;&lt;em&gt;(Please note that in May 2013 the blog ha migrated to Pelican.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This blog is powered by the &lt;a href="http://www.sourceforge.net/projects/blojsom"&gt;Blojsom&lt;/a&gt; blog engine, installed and managed by myself on my own server. Blojsom is a nice piece of work but its &lt;a href="http://wiki.blojsom.com/"&gt;documentation pages&lt;/a&gt; seem to be down at the moment, so I had to poke around a bit while setting it up. I've compiled a quick FAQ based on that experience:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Is Blojsom suitable for me?&lt;/strong&gt;
If you're familiar with Java-based web technologies and you want to host a blog, Blojsom is probably your best choice. Just drop the .war file into Tomcat's webapps/, deploy, tweak an XML file, restart and you're done. If you have no idea what the previous sentence is about, Blojsom is definitely not suitable for you.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I configure Blojsom?&lt;/strong&gt;
Low-level settings can be set in &lt;em&gt;WEB-INF/web.xml&lt;/em&gt; and &lt;em&gt;WEB-INF/classes/*.xml&lt;/em&gt;. There are only two things you really need to set, both of them in &lt;em&gt;WEB-INF/classes/blojsom-helper-beans-include.xml&lt;/em&gt;. The first is database location. Look for "jdbc:hsqldb:mem" and replace "mem" with the desired path (like "/home/joe/databases/blog" where "/home/joe/databases" is an existing writable directory and "blog" is an arbitrary database name). Blojsom will create database files during the next start-up. By default, Blojsom also destroys its database upon shutdown (the default settings are meant for initial testing). To prevent that from happening, look for "hbm2ddl.auto" and on the same line, change "create-drop" to just "create".&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When I start Blojsom and go to its URL I see no blog, only something about a "meta refresh". What's up with that?&lt;/strong&gt;
A single Blojsom installation can run multiple blogs at once, hence it has no central home page. Instead, each blog gets its own page. The default blog is called "default" and its URL under Blojsom is &lt;em&gt;/blog/default/&lt;/em&gt;, i.e. instead of &lt;em&gt;http://server/blojsom/&lt;/em&gt; you should go to &lt;em&gt;http://server/blojsom/blog/default/&lt;/em&gt;. How to automatically bring visitors from &lt;em&gt;/blojsom&lt;/em&gt; to &lt;em&gt;/blojsom/blog/default&lt;/em&gt; is a topic beyond the scope of this FAQ.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I log into Blojsom?&lt;/strong&gt;
Blojsom's default theme has no &lt;em&gt;Log in&lt;/em&gt; link. To get to a blog's login page, simply append "?flavor=admin" to the blog's URL. The pre-set admin account is "blojsom" (password "blojsom"). Once logged in, you can configure accounts under &lt;em&gt;Weblog Settings &amp;gt; Users&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I change my blog's theme?&lt;/strong&gt;
Themes are simply collections of files in subdirectories under &lt;em&gt;WEB-INF/themes&lt;/em&gt;. A few are pre-installed; you can choose among them under &lt;em&gt;Plugins &amp;gt; Configure &amp;gt; Theme Switcher plugin&lt;/em&gt;. Keep in mind that while logged in, you see the blog's "admin" flavor but themes are applied to the "html" flavor by default.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I hate all of the bundled themes, how do I add my own?&lt;/strong&gt;
Oh come on, the "autumn" theme is pretty good ;-) Anyway, your best bet is to copy an existing theme into a new directory and tweak the files until you're satisfied. One caveat: Blojsom doesn't actually use the files under &lt;em&gt;WEB-INF/themes&lt;/em&gt; when rendering a blog. Instead, whenever you choose a theme in the admin page, its files are copied into &lt;em&gt;resources/&lt;blogname&gt;&lt;/em&gt; and that's where Blojsom looks when rendering. So each time you want to see the changes you've made under &lt;em&gt;WEB-INF/themes/myCoolTheme&lt;/em&gt; you have to choose "myCoolTheme" in the admin page. You could, of course, edit files under &lt;em&gt;resources/&lt;blogname&gt;&lt;/em&gt; directly but you would risk losing your changes at the next theme switch.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="meta"></category><category term="howto"></category></entry><entry><title>Oh no, another blog</title><link href="http://meandering.journey.sk/oh-no-another-blog.html" rel="alternate"></link><updated>2010-10-19T00:06:00+02:00</updated><author><name>Jan Hustak</name></author><id>tag:meandering.journey.sk,2010-10-19:oh-no-another-blog.html</id><summary type="html">&lt;p&gt;I am a software developer. My work involves a great deal of communication, much of it in writing. Sometimes it takes a lot of time and effort to get the message just right. I started this blog to practice my writing. I hope to evolve a fluid, consistent process for expressing my thoughts. This page has been made public as I hope a genuine audience, however small, may help me achieve that goal. I will do my best to return the favor in the most appropriate currency: interesting and maybe even useful prose.&lt;/p&gt;</summary><category term="meta"></category></entry></feed>